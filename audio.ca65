; ----------------------------------------------------------------------------
; Jump table used by LD3FB.

; noise vectors
LD200:  .word VD5DC, VD698, VD619, VD5BA
        .word VD67A, VD570, VD693, VD294
LD210:  .word VD5EE, VD69F, VD66A, VD5D1
        .word VD681, VD577, VD294, VD294
; pulse 1 vectors
LD220:  .word VD8D1, VD93B, VD88D, VD959
        .word VD8E7, VDA24, VD877, VD86D
        .word VD923, VD9B8, VD99A
LD236:  .word VD8BA, VD950, VD8A3, VD970
        .word VD8FD, VDA08, VD8A3, VD83D
        .word VD92E, VD9BF, VD9A1
; triangle vectors
LD24C:  .word VDAB0, VDA71, VDACB, VDACF
LD254:  .word VDA8E, VDA78, VDA8E, VDA8E
; voice 4 vectors
LD25C:  .word VD727, VD6DB, VD7A3
LD262:  .word VD734, VD6EA, VD7AF
; pulse 2 vectors
LD268:  .word RD4E5, VDA50, VDA48

; ----------------------------------------------------------------------------
; Copy 4 bytes from $D300+Y to $4000 (Pulse channel 1)
RD26E:
    lda #<$4000                                 ; D26E A9 00
    beq LD27C ; always                          ; D270 F0 0A
; Copy 4 bytes from $D300+Y to $4008 (Triangle channel)
RD272:
    lda #<$4008                                 ; D272 A9 08
    bne LD27C ; always                          ; D274 D0 06
; Copy 4 bytes from $D300+Y to $400C (Noise channel)
RD276:
    lda #<$400C                                 ; D276 A9 0C
    bne LD27C ; always                          ; D278 D0 02
; Copy 4 bytes from $D300+Y to $4004 (Pulse channel 2)
RD27A:
    lda #<$4004                                 ; D27A A9 04
LD27C:
    sta $E0                                     ; D27C 85 E0
    lda #>$4000                                 ; D27E A9 40
    sta $E1                                     ; D280 85 E1
    sty $E2                                     ; D282 84 E2
    lda #$D3                                    ; D284 A9 D3
    sta $E3                                     ; D286 85 E3
    ; copy 4 bytes from ($E2) to ($E0)
    ldy #$00                                    ; D288 A0 00
    loop
        lda ($E2),y                             ; D28A B1 E2
        sta ($E0),y                             ; D28C 91 E0
        iny                                     ; D28E C8
        tya                                     ; D28F 98
        cmp #$04                                ; D290 C9 04
    while_ne                                    ; D292 D0 F6
VD294:
    rts                                         ; D294 60

; ----------------------------------------------------------------------------
; Linear Feedback Shift Register
; called from one place (RFFD0)
; input: $EB $EC
; If $EB and $EC differ in bit 1, then new bit = 1
RD295:
    lda $EB                                     ; D295 A5 EB
    and #$02                                    ; D297 29 02
    sta $06FF                                   ; D299 8D FF 06
    lda $EC                                     ; D29C A5 EC
    and #$02                                    ; D29E 29 02
    eor $06FF                                   ; D2A0 4D FF 06
    clc                                         ; D2A3 18
    if_ne                                       ; D2A4 F0 01
        sec                                     ; D2A6 38
    end_if
    ror $EB                                     ; D2A7 66 EB
    ror $EC                                     ; D2A9 66 EC
    rts                                         ; D2AB 60

; ----------------------------------------------------------------------------
RD2AC:
    ldx $ED ;voice number                       ; D2AC A6 ED
    inc $06DA,x                                 ; D2AE FE DA 06
    lda $06DA,x                                 ; D2B1 BD DA 06
    cmp $06D5,x                                 ; D2B4 DD D5 06
    if_eq                                       ; D2B7 D0 05
        lda #$00                                ; D2B9 A9 00
        sta $06DA,x                             ; D2BB 9D DA 06
    end_if
    rts                                         ; D2BE 60

; ----------------------------------------------------------------------------
; RFFD6 jumps directly here
LD2BF:
    lda #$0F                                    ; D2BF A9 0F
    sta $4015                                   ; D2C1 8D 15 40
    ; seed the LFSR
    lda #$55                                    ; D2C4 A9 55
    sta $EB                                     ; D2C6 85 EB
    jsr RD4E5 ;RFFD3                            ; D2C8 20 E5 D4
    rts                                         ; D2CB 60

; ----------------------------------------------------------------------------
        ;D2CC
        .byte $FF,$FF,$FF,$FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
        .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
; ----------------------------------------------------------------------------
; values to copy into APU registers
; Used in RD52B.
        ;D300
        .byte $03,$7F,$0F,$C0

; Registers for noise channel ($400C-$400F)
; $400C: --LC VVVV Envelope loops / length counter halt (L), constant volume (C), volume/envelope (V)
; $400D: ---- ---- Unused
; $400E: L--- PPPP Loop noise (L), noise period (P)
; $400F: LLLL L--- Length counter load (L)
LD304:  .byte $33,$7F,$80,$C0 ; registers for noise channel
LD308:  .byte $3F,$7F,$82,$C0 ; registers for noise channel
LD30C:  .byte $39,$7F,$00,$C0 ; registers for noise channel
LD310:  .byte $39,$7F,$0E,$C0 ; registers for noise channel
LD314:  .byte $32,$7F,$0E,$C0 ; registers for noise channel
LD318:  .byte $1F,$7F,$0F,$C0 ; registers for noise channel
LD31C:  .byte $14,$7F,$02,$C0 ; registers for noise channel
        .byte $B0,$7F,$1C,$40
        .byte $B0,$7F,$32,$40

; Registers for pulse channel ($4000-$4003 or $4004-$4007)
; $4000: DDLC VVVV  Duty (D), envelope loop / length counter halt (L), constant volume (C), volume/envelope (V)
; $4001: EPPP NSSS  Sweep unit: enabled (E), period (P), negate (N), shift (S)
; $4002: TTTT TTTT  Timer low (T)
; $4003: LLLL LTTT  Length counter load (L), timer high (T)
; First byte: $00-$3f (12.5%) $40-$7f (25%) $80-$bf (50%) $c0-$ff (75%)
LD328:  .byte $B0,$7F,$30,$40 ; 50% duty, length counter off, envelope off, volume 0, 1/freq $30  48
LD32C:  .byte $B0,$7F,$10,$40 ; 50% duty, length counter off, envelope off, volume 0, 1/freq $10  16
LD330:  .byte $9D,$7F,$7A,$28 ; 50% duty, length counter on, envelope off, volume 13, 1/freq $7A  122
LD334:  .byte $9D,$7F,$40,$28 ; 50% duty, length counter on, envelope off, volume 13, 1/freq $40  32
LD338:  .byte $96,$7F,$A3,$28 ; 50% duty, length counter on, envelope off, volume 6,  1/freq $A3  163
LD33C:  .byte $B2,$7F,$A3,$08 ; 50% duty, 1/freq $A3
LD340:  .byte $96,$7F,$D4,$28 ; 50% duty, 1/freq $D4
LD344:  .byte $9B,$84,$FF,$0B ; 50% duty, 1/freq $3FF
LD348:  .byte $D7,$7F,$40,$30 ; 75% duty, 1/freq $40
LD34C:  .byte $D2,$7F,$40,$30 ; 75% duty, 1/freq $40
LD350:  .byte $00,$7F,$78,$08 ; 1/8 duty, 1/freq $78
LD354:  .byte $01,$7F,$B2,$08 ; 1/8 duty, 1/freq $B2
LD358:  .byte $9E,$99,$F0,$08 ; 50% duty, 1/freq $F0
        .byte $9C,$BB,$80,$09 ; 50% duty, 1/freq $180
LD360:  .byte $9F,$87,$FF,$08 ; 50% duty, 1/freq $FF
LD364:  .byte $96,$7F,$5E,$20 ; 50% duty, 1/freq $5E
LD368:  .byte $82,$7F,$53,$F8 ; 50% duty, 1/freq $53
LD36C:  .byte $80,$7F,$62,$18 ; 50% duty, 1/freq $62
LD370:  .byte $01,$7F,$58,$08 ; 1/8 duty, 1/freq $58
LD374:  .byte $01,$7F,$59,$08 ; 1/8 duty, 1/freq $59
LD378:  .byte $FA,$7F,$8D,$08 ; 75% duty, 1/freq $8D
LD37C:  .byte $F7,$7F,$8E,$08 ; 75% duty, 1/freq $8E

; Registers for triangle channel ($4008-$400B)
; $4008: CRRR RRRR  Length counter halt / linear counter control (C), linear counter load (R)
; $4009: ---- ----  Unused
; $400A: TTTT TTTT  Timer low (T)
; $400B: LLLL LTTT  Length counter load (L), timer high (T)
LD380:  .byte $FF,$7F,$20,$0A ; registers for triangle channel
LD384:  .byte $FF,$7F,$52,$0A ; registers for triangle channel
LD388:  .byte $03,$7F,$3D,$18 ; registers for triangle channel

; ----------------------------------------------------------------------------
; 4-byte lookup table
LD38C:  .byte $14,$93,$94,$D3
; ----------------------------------------------------------------------------
; used by RD6BA
LD390:  .byte $FE,$FE,$FF,$EF,$FE,$EF,$FE,$EF,$EF,$FE,$EF,$FE,$EF,$FF,$EE,$EE
        .byte $FF,$EF,$FF,$FF,$FF,$EF,$EF,$FF,$FD,$EF,$EF,$EF,$FE,$EF,$EF,$FF
; ----------------------------------------------------------------------------
; used by RD6BA
LD3B0:  .byte $F1,$FF,$E1,$EF,$EF,$EF,$DF,$FB,$FB,$AE,$AA,$99,$98,$87,$76,$66
        .byte $55,$44,$44,$44,$44,$43,$33,$33,$22,$22,$22,$22,$21,$11,$11,$11

; ----------------------------------------------------------------------------
; called from one place
; may call one of 3 vectors from LD268 depending on $06f2 and $06fa.
RD3D0:  ldx #$02 ;voice 2 (pulse 2)             ; D3D0 A2 02
        lda #<LD268                             ; D3D2 A9 68
        ldy #<LD268                             ; D3D4 A0 68
        bne LD3FB ;always                       ; D3D6 D0 23
; called from one place
; may call a vector from LD24C or LD254 depending on $06f3 and $06fb.
RD3D8:  ldx #$03 ;voice 3 (triangle)            ; D3D8 A2 03
        lda #<LD24C                             ; D3DA A9 4C
        ldy #<LD254                             ; D3DC A0 54
        bne LD3FB ;always                       ; D3DE D0 1B
; called from one place
; may call a vector from LD25C or LD262 depending on $06f4 and $06fc.
RD3E0:  ldx #$04 ;voice 4 (?)                   ; D3E0 A2 04
        lda #<LD25C                             ; D3E2 A9 5C
        ldy #<LD262                             ; D3E4 A0 62
        bne LD3FB ;always                       ; D3E6 D0 13
; called from one place
; may call a vector from LD220 or LD236 depending on $06f1 and $06f9.
; but not if $06fc is non-zero
RD3E8:  lda $06FC                               ; D3E8 AD FC 06
        bne LD43E ; rts                         ; D3EB D0 51
        ldx #$01 ;voice 1 (pulse 1)             ; D3ED A2 01
        lda #<LD220                             ; D3EF A9 20
        ldy #<LD236                             ; D3F1 A0 36
        bne LD3FB ;always                       ; D3F3 D0 06
; called from one place
; may call a vector from LD200 or LD210 depending on $06f0 and $06f8.
RD3F5:  ldx #$00 ;voice 0 (noise)               ; D3F5 A2 00
        lda #<LD200                             ; D3F7 A9 00
        ldy #<LD210                             ; D3F9 A0 10

LD3FB:
; input A,X,Y
; X = voice number (0 to 4)
; let J = $06F0,X and K = $06F8,X
; if J > 0 then jump to (J-1)th vector at LD200+A
; if J = 0 and K > 0 then jump to (K-1)th vector at LD200+Y
; if J = 0 and K = 0 then rts
        sta $E0                                 ; D3FB 85 E0
        stx $ED                                 ; D3FD 86 ED
        lda $06F0,x                             ; D3FF BD F0 06
        beq LD435                               ; D402 F0 31

LD404:
; input A: jump to vector at LD200 + $E0 + (A-1)<<1
        sta $EF                                 ; D404 85 EF
        sta $E2                                 ; D406 85 E2
        ldy #>LD200                             ; D408 A0 D2
        sty $E1                                 ; D40A 84 E1
        and #$07                                ; D40C 29 07
        tay                                     ; D40E A8
        lda LD42D,y                             ; D40F B9 2D D4
        tay                                     ; D412 A8
        dec $E2                                 ; D413 C6 E2
        lda $E2                                 ; D415 A5 E2
        and #$F8                                ; D417 29 F8
        sta $E2                                 ; D419 85 E2
        asl $E2                                 ; D41B 06 E2
        tya                                     ; D41D 98
        ora $E2                                 ; D41E 05 E2
        tay                                     ; D420 A8
        ; now Y = (A-1)<<1
        lda ($E0),y                             ; D421 B1 E0
        sta $E2                                 ; D423 85 E2
        iny                                     ; D425 C8
        lda ($E0),y                             ; D426 B1 E0
        sta $E3                                 ; D428 85 E3
        jmp ($E2)                               ; D42A 6C E2 00

LD42D:  .byte $0E, $00, $02, $04                ; D42D 0E 00 02 04
        .byte $06, $08, $0A, $0C                ; D431 06 08 0A 0C

LD435:
; input X,Y: if $06F8,X is zero then rts, else $E0=Y and LD404
        lda $06F8,x                             ; D435 BD F8 06
        beq LD43E                               ; D438 F0 04
        sty $E0                                 ; D43A 84 E0
        bne LD404                               ; D43C D0 C6
LD43E:  rts                                     ; D43E 60

; ----------------------------------------------------------------------------
; case L0682 = 0
LD43F:  inc $0682                               ; D43F EE 82 06
        jsr RD515                               ; D442 20 15 D5
        ; RD515 sets A = 0
        sta $0683                               ; D445 8D 83 06
        rts                                     ; D448 60

; case L068D = 5
LD449:
    lda $0682                                   ; D449 AD 82 06
    beq LD43F                                   ; D44C F0 F1
    ; case $0682 != 0
    lda $0683                                   ; D44E AD 83 06
    cmp #$12                                    ; D451 C9 12
    if_ne                                       ; D453 F0 1A
        and #$03                                ; D455 29 03
        cmp #$03                                ; D457 C9 03
        if_eq                                   ; D459 D0 11
            inc $068B                           ; D45B EE 8B 06
            ldy #<LD334                         ; D45E A0 34
            lda $068B                           ; D460 AD 8B 06
            and #$01                            ; D463 29 01
            if_eq                               ; D465 D0 02
                ldy #<LD330                     ; D467 A0 30
            end_if
            ; copy 4 bytes to pulse channel 1
            jsr RD26E                           ; D469 20 6E D2
        end_if
        inc $0683                               ; D46C EE 83 06
    end_if
    rts                                         ; D46F 60

; RFFD0 jumps directly here
LD470:
.scope
    ; APU frame counter 5-step mode, IRQ inhibited
    lda #$C0                                    ; D470 A9 C0
    sta $4017                                   ; D472 8D 17 40
    jsr RD295 ; advance LFSR                    ; D475 20 95 D2
    lda L068D                                   ; D478 AD 8D 06
    cmp #$05                                    ; D47B C9 05
    beq LD449                                   ; D47D F0 CA
    ; case L068D = 0
    lda #$00                                    ; D47F A9 00
    sta $0682                                   ; D481 8D 82 06
    sta $068B                                   ; D484 8D 8B 06
    lda $06F4                                   ; D487 AD F4 06
    cmp #$03                                    ; D48A C9 03
    if_ne                                       ; D48C F0 03
    else                                        ; D48E 4C A3 D4
        jsr RD4E5                               ; D491 20 E5 D4
        lda #$03                                ; D494 A9 03
        sta $06F4                               ; D496 8D F4 06
        lda #$05                                ; D499 A9 05
        sta $06F0                               ; D49B 8D F0 06
        lda #$04                                ; D49E A9 04
        sta $06F3                               ; D4A0 8D F3 06
    end_if
    lda $06F5                                   ; D4A3 AD F5 06
    cmp #$05                                    ; D4A6 C9 05
    if_ne                                       ; D4A8 F0 17
        cmp #$0C                                ; D4AA C9 0C
        if_ne                                   ; D4AC F0 03
            jmp LD4C8                           ; D4AE 4C C8 D4
        end_if
        jsr RD4E5                               ; D4B1 20 E5 D4
        lda #$0C                                ; D4B4 A9 0C
        sta $06F5                               ; D4B6 8D F5 06
        lda #$02                                ; D4B9 A9 02
        sta $06F0                               ; D4BB 8D F0 06
        jmp LD4C8                               ; D4BE 4C C8 D4
    end_if
    lda #$02                                    ; D4C1 A9 02
    if_eq                                       ; D4C3 D0 00
    end_if
    sta $06F0                                   ; D4C5 8D F0 06
LD4C8:
    jsr RD3D0 ; call pulse 2 vector             ; D4C8 20 D0 D3
    jsr RD3F5 ; call noise vector               ; D4CB 20 F5 D3
    jsr RD3E0 ; call voice 4 vector             ; D4CE 20 E0 D3
    jsr RD3D8 ; call triangle vector            ; D4D1 20 D8 D3
    jsr RD3E8 ; call pulse 1 vector             ; D4D4 20 E8 D3
    jsr RDAFB                                   ; D4D7 20 FB DA
    ; set $06f0-$06f5 to 0
    lda #$00                                    ; D4DA A9 00
    ldx #$06                                    ; D4DC A2 06
    loop
        sta $06EF,x                             ; D4DE 9D EF 06
        dex                                     ; D4E1 CA
    while_ne                                    ; D4E2 D0 FA
    rts                                         ; D4E4 60
.endscope

; ----------------------------------------------------------------------------
; vector
; RFFD3 jumps directly here
RD4E5:  jsr RD4F4                               ; D4E5 20 F4 D4
RD4E8:  jsr RD515 ; silence/reset APU           ; D4E8 20 15 D5 ; called once
        lda #$00                                ; D4EB A9 00
        sta $4011                               ; D4ED 8D 11 40
        sta $069C                               ; D4F0 8D 9C 06
        rts                                     ; D4F3 60

; ----------------------------------------------------------------------------
; no inputs
; Writes 0 to $068a $068c $06c8 $06c9 $06ca $06e8 $06f8,[0..5]
RD4F4:
    lda #$00                                    ; D4F4 A9 00
    sta $06C8                                   ; D4F6 8D C8 06
    sta $06C9                                   ; D4F9 8D C9 06
    sta $06CA                                   ; D4FC 8D CA 06
    sta $068C                                   ; D4FF 8D 8C 06
    sta $06E8                                   ; D502 8D E8 06
    sta $068A                                   ; D505 8D 8A 06
    tay                                         ; D508 A8
    loop
        lda #$00                                ; D509 A9 00
        sta $06F8,y                             ; D50B 99 F8 06
        iny                                     ; D50E C8
        tya                                     ; D50F 98
        cmp #$06                                ; D510 C9 06
    while_ne                                    ; D512 D0 F5
    rts                                         ; D514 60

; ----------------------------------------------------------------------------
; Initialize/silence APU
; no inputs
; $4000 = #$10 Pulse channel 1, constant volume = 0
; $4004 = #$10 Pulse channel 2, constant volume = 0
; $4008 = #$00 Triangle channel, counter = 0
; $400C = #$10 Noise channel, volume = 0
; $4011 = #$00 DMC direct load = 0

RD515:
    lda #$00                                    ; D515 A9 00
    sta $4011                                   ; D517 8D 11 40
    lda #$10                                    ; D51A A9 10
    sta $4000                                   ; D51C 8D 00 40
    sta $4004                                   ; D51F 8D 04 40
    sta $400C                                   ; D522 8D 0C 40
    lda #$00                                    ; D525 A9 00
    sta $4008                                   ; D527 8D 08 40
    rts                                         ; D52A 60

; ----------------------------------------------------------------------------
; input A,Y
; input $ed $ef
; READS $ed $ef ($e2),Y
; WRITES $e0 $e1 $e2 $e3 L068a ($e0),Y L06c7,X L06d5,X L06da,X L06df,X L06e3,X L06e7,X L06f8,X
; $068A = #$00
; $06D5,$ED = A
; $06C7,$ED = $ED
; $06DA,$ED = #$00
; $06DF,$ED = #$00
; $06E3,$ED = #$00
; $06E7,$ED = #$00
; $06F8,$ED = $EF

; Copy 4 bytes from $D300+Y to registers for selected voice ($ED)
RD52B:
.scope
        ldx $ED     ;voice number               ; D52B A6 ED
        sta $06D5,x                             ; D52D 9D D5 06
        txa                                     ; D530 8A
        sta $06C7,x                             ; D531 9D C7 06
        tya                                     ; D534 98
        beq LD559                               ; D535 F0 22
        txa                                     ; D537 8A
        beq case0                               ; D538 F0 1C
        cmp #$01                                ; D53A C9 01
        beq case1                               ; D53C F0 09
        cmp #$02                                ; D53E C9 02
        beq case2                               ; D540 F0 0A
        cmp #$03                                ; D542 C9 03
        beq case3                               ; D544 F0 0B
        rts                                     ; D546 60

case1:  ;4 bytes from $D300+Y to $4000 (Pulse channel 1)
        jsr RD26E                               ; D547 20 6E D2
        ;always branch
        beq LD559                               ; D54A F0 0D

case2:  ;4 bytes from $D300+Y to $4004 (Pulse channel 2)
        jsr RD27A                               ; D54C 20 7A D2
        ;always branch
        beq LD559                               ; D54F F0 08

case3:  ;4 bytes from $D300+Y to $4008 (Triangle channel)
        jsr RD272                               ; D551 20 72 D2
        ;always branch
        beq LD559                               ; D554 F0 03

case0:  ;4 bytes from $D300+Y to $400C (Noise channel)
        jsr RD276                               ; D556 20 76 D2

; case Y=0
LD559:  lda $EF                                 ; D559 A5 EF
        sta $06F8,x                             ; D55B 9D F8 06
        lda #$00                                ; D55E A9 00
        sta $06DA,x                             ; D560 9D DA 06
.endscope
LD563:  sta $06DF,x                             ; D563 9D DF 06
        sta $06E3,x                             ; D566 9D E3 06
        sta $06E7,x                             ; D569 9D E7 06
        sta $068A                               ; D56C 8D 8A 06
LD56F:  rts                                     ; D56F 60

; ----------------------------------------------------------------------------
; noise vector 6
VD570:  lda     #$02                            ; D570 A9 02
        ldy     #<LD304                         ; D572 A0 04
        jsr     RD52B                           ; D574 20 2B D5
; noise vector 6'
VD577:  jsr     RD2AC                           ; D577 20 AC D2
        bne     LD56F                           ; D57A D0 F3
        lda     $06DF                           ; D57C AD DF 06
        and     #$0F                            ; D57F 29 0F
        tay                                     ; D581 A8
        inc     $06DF                           ; D582 EE DF 06
        lda     LD592,y                         ; D585 B9 92 D5
        sta     $400E                           ; D588 8D 0E 40
        lda     LD5A2,y                         ; D58B B9 A2 D5
        sta     $400C                           ; D58E 8D 0C 40
        rts                                     ; D591 60

; ----------------------------------------------------------------------------
; 16-byte lookup table
LD592:  .byte $81,$81,$82,$82,$83,$83,$84,$84,$83,$83,$82,$82,$81,$81,$82,$82
; ----------------------------------------------------------------------------
; 16-byte lookup table
LD5A2:  .byte $33,$34,$35,$36,$37,$38,$39,$38,$39,$38,$37,$36,$35,$34,$33,$32
; ----------------------------------------------------------------------------
; unreachable
        lda     #$07                            ; D5B2 A9 07
        ldy     #<LD314                         ; D5B4 A0 14
        jsr     RD52B                           ; D5B6 20 2B D5
        rts                                     ; D5B9 60

; ----------------------------------------------------------------------------
; noise vector 4
VD5BA:
    lda #$B3                                    ; D5BA A9 B3
    sta $06E8                                   ; D5BC 8D E8 06
    lda #$07                                    ; D5BF A9 07
    ldy #<LD310                                 ; D5C1 A0 10
    jsr RD52B                                   ; D5C3 20 2B D5
    lda #$3E                                    ; D5C6 A9 3E
    sta $06E3                                   ; D5C8 8D E3 06
    lda #$0F                                    ; D5CB A9 0F
    sta $06DF                                   ; D5CD 8D DF 06
    rts                                         ; D5D0 60

; ----------------------------------------------------------------------------
; noise vector 4'
VD5D1:
    jsr RD2AC                                   ; D5D1 20 AC D2
    bne LD56F                                   ; D5D4 D0 99
    dec $06DF                                   ; D5D6 CE DF 06
    jmp LD5F6                                   ; D5D9 4C F6 D5

; ----------------------------------------------------------------------------
; noise vector 1
VD5DC:
    lda #$0B                                    ; D5DC A9 0B
    ldy #<LD30C                                 ; D5DE A0 0C
    jsr RD52B                                   ; D5E0 20 2B D5
    lda #$3E                                    ; D5E3 A9 3E
    sta $06E3                                   ; D5E5 8D E3 06
    lda #$00                                    ; D5E8 A9 00
    sta $06DF                                   ; D5EA 8D DF 06
    rts                                         ; D5ED 60

; ----------------------------------------------------------------------------
; noise vector 1'
VD5EE:
    jsr RD2AC                                   ; D5EE 20 AC D2
    bne LD618                                   ; D5F1 D0 25
    inc $06DF                                   ; D5F3 EE DF 06
LD5F6:
    lda $06DF                                   ; D5F6 AD DF 06
    sta $400E                                   ; D5F9 8D 0E 40
    dec $06E3                                   ; D5FC CE E3 06
    lda $06E3                                   ; D5FF AD E3 06
    sta $400C                                   ; D602 8D 0C 40
    cmp #$36                                    ; D605 C9 36
    beq LD615                                   ; D607 F0 0C
    cmp #$2F                                    ; D609 C9 2F
    bne LD618                                   ; D60B D0 0B
    lda #$B1                                    ; D60D A9 B1
    sta $06E8                                   ; D60F 8D E8 06
    jmp LD66F                                   ; D612 4C 6F D6

; ----------------------------------------------------------------------------
LD615:  jsr     RDA7D                           ; D615 20 7D DA
LD618:  rts                                     ; D618 60

; ----------------------------------------------------------------------------
; noise vector 3
VD619:  lda     #$04                            ; D619 A9 04
        ldy     #<LD31C                         ; D61B A0 1C
        jsr     RD52B                           ; D61D 20 2B D5
        ; set random noise frequency 0-7
        lda     $EB                             ; D620 A5 EB
        and     #$07                            ; D622 29 07
        sta     $400E                           ; D624 8D 0E 40
        rts                                     ; D627 60

; ----------------------------------------------------------------------------
LD628:  sta     $400E                           ; D628 8D 0E 40
        rts                                     ; D62B 60

; ----------------------------------------------------------------------------
; Input: X
; called from one place, with X=#$90
RD62C:  jsr     RD6BA                           ; D62C 20 BA D6
        jmp     LD628                           ; D62F 4C 28 D6

; ----------------------------------------------------------------------------
; unreachable
        lda     #$07                            ; D632 A9 07
        ldy     #<LD308                         ; D634 A0 08
        jmp     RD52B                           ; D636 4C 2B D5

; ----------------------------------------------------------------------------
; Unreachable
        jsr     RD2AC                           ; D639 20 AC D2
        if_eq                                   ; D63C D0 27
        lda     $06E3                           ; D63E AD E3 06
        if_ne                                   ; D641 F0 05
        dec     $06DF                           ; D643 CE DF 06
        beq     LD66F                           ; D646 F0 27
        end_if
        inc     $06DF                           ; D648 EE DF 06
        ; set random noise frequency + loop mode
        lda     $EB                             ; D64B A5 EB
        and     #$07                            ; D64D 29 07
        ora     #$80                            ; D64F 09 80
        sta     $400E                           ; D651 8D 0E 40
        lda     $06DF                           ; D654 AD DF 06
        cmp     #$0B                            ; D657 C9 0B
        beq     LD666                           ; D659 F0 0B
        ora     #$10                            ; D65B 09 10
        sta     $400C                           ; D65D 8D 0C 40
        lda     #$08                            ; D660 A9 08
        sta     $400F                           ; D662 8D 0F 40
        end_if
        rts                                     ; D665 60

; ----------------------------------------------------------------------------
; unreachable
LD666:  inc     $06E3                           ; D666 EE E3 06
        rts                                     ; D669 60

; ----------------------------------------------------------------------------
; noise vector 3'
VD66A:  jsr     RD2AC                           ; D66A 20 AC D2
        bne     LD679                           ; D66D D0 0A
LD66F:  lda     #$00                            ; D66F A9 00
        sta     $06F8                           ; D671 8D F8 06
        lda     #$10                            ; D674 A9 10
        sta     $400C                           ; D676 8D 0C 40
LD679:  rts                                     ; D679 60

; ----------------------------------------------------------------------------
; noise vector 5
VD67A:  lda     #$40                            ; D67A A9 40
        ldy     #<LD318                         ; D67C A0 18
        jmp     RD52B                           ; D67E 4C 2B D5

; ----------------------------------------------------------------------------
; noise vector 5'
VD681:  lda     $06E3                           ; D681 AD E3 06
        bne     LD679                           ; D684 D0 F3
        jsr     RD2AC                           ; D686 20 AC D2
        bne     LD6A7                           ; D689 D0 1C
        inc     $06E3                           ; D68B EE E3 06
        ldy     #<LD314                         ; D68E A0 14
        jmp     RD276                           ; D690 4C 76 D2

; ----------------------------------------------------------------------------
; noise vector 7
VD693:  ldy     #<LD314                         ; D693 A0 14
        jmp     RD52B                           ; D695 4C 2B D5

; ----------------------------------------------------------------------------
; noise vector 2
VD698:  lda     #$40                            ; D698 A9 40
        ldy     #<LD318                         ; D69A A0 18
        jmp     RD52B                           ; D69C 4C 2B D5

; ----------------------------------------------------------------------------
; noise vector 2'
VD69F:  jsr     RD2AC                           ; D69F 20 AC D2
        bne     LD6A7                           ; D6A2 D0 03
        jmp     LD66F                           ; D6A4 4C 6F D6

; ----------------------------------------------------------------------------
LD6A7:  ldx     #<LD390                         ; D6A7 A2 90
        jsr     RD62C                           ; D6A9 20 2C D6
        ldx     #<LD3B0                         ; D6AC A2 B0
        jsr     RD6BA                           ; D6AE 20 BA D6
        ora     #$10                            ; D6B1 09 10
        sta     $400C                           ; D6B3 8D 0C 40
        inc     $06DF                           ; D6B6 EE DF 06
        rts                                     ; D6B9 60

; ----------------------------------------------------------------------------
; Input in X
; Read array starting at $D300+X
; Called with values of X=#$B0 and X=#$90
RD6BA:
    stx $E0                                     ; D6BA 86 E0
    ldy #>LD390                                 ; D6BC A0 D3
    sty $E1                                     ; D6BE 84 E1
    ldx $06DF                                   ; D6C0 AE DF 06
    txa                                         ; D6C3 8A
    lsr a                                       ; D6C4 4A
    tay                                         ; D6C5 A8
    lda ($E0),y                                 ; D6C6 B1 E0
    sta $E4                                     ; D6C8 85 E4
    txa                                         ; D6CA 8A
    and #$01                                    ; D6CB 29 01
    if_ne                                       ; D6CD F0 05
        lda $E4                                 ; D6CF A5 E4
        and #$0F                                ; D6D1 29 0F
        rts                                     ; D6D3 60
    end_if
    lda $E4                                     ; D6D4 A5 E4
    lsr a                                       ; D6D6 4A
    lsr a                                       ; D6D7 4A
    lsr a                                       ; D6D8 4A
    lsr a                                       ; D6D9 4A
    rts                                         ; D6DA 60

; ----------------------------------------------------------------------------
; voice 4 vector
VD6DB:
    ldy #<LD378                                 ; D6DB A0 78
    jsr RD26E                                   ; D6DD 20 6E D2
    lda #$05                                    ; D6E0 A9 05
    ldy #<LD37C                                 ; D6E2 A0 7C
    jmp LD769                                   ; D6E4 4C 69 D7

; ----------------------------------------------------------------------------
LD6E7:  jmp     LD78A                           ; D6E7 4C 8A D7

; ----------------------------------------------------------------------------
; voice 4 vector
VD6EA:
    jsr RD2AC                                   ; D6EA 20 AC D2
    bne LD733                                   ; D6ED D0 44
    ldy $06E0                                   ; D6EF AC E0 06
    inc $06E0                                   ; D6F2 EE E0 06
    lda LD70C,y                                 ; D6F5 B9 0C D7
    beq LD6E7                                   ; D6F8 F0 ED
    sta $4002                                   ; D6FA 8D 02 40
    lda LD71A,y                                 ; D6FD B9 1A D7
    sta $4006                                   ; D700 8D 06 40
    lda #$08                                    ; D703 A9 08
    sta $4003                                   ; D705 8D 03 40
    sta $4007                                   ; D708 8D 07 40
    rts                                         ; D70B 60
; ----------------------------------------------------------------------------
; lookup table, used in VD6EA.
LD70C:
    .byte $8D,$01,$7E,$8D,$01,$9F,$01,$A8
    .byte $01,$01,$01,$D4,$01,$00
; ----------------------------------------------------------------------------
; lookup table
LD71A:  .byte $8E,$01,$7F,$8E,$01,$A0,$01,$A9
        .byte $01,$01,$01,$D5,$01
; ----------------------------------------------------------------------------
VD727:
    ldy #<LD370                                 ; D727 A0 70
    jsr RD26E                                   ; D729 20 6E D2
    lda #$06                                    ; D72C A9 06
    ldy #<LD374                                 ; D72E A0 74
    jmp LD769                                   ; D730 4C 69 D7

; ----------------------------------------------------------------------------
LD733:  rts                                     ; D733 60

; ----------------------------------------------------------------------------
VD734:
    jsr RD2AC                                   ; D734 20 AC D2
    bne LD733                                   ; D737 D0 FA
    ldy $06E0                                   ; D739 AC E0 06
    inc $06E0                                   ; D73C EE E0 06
    lda LD759,y                                 ; D73F B9 59 D7
    beq LD78A                                   ; D742 F0 46
    sta $4002                                   ; D744 8D 02 40
    lda LD761,y                                 ; D747 B9 61 D7
LD74A:
    sta $4006                                   ; D74A 8D 06 40
    lda #$08                                    ; D74D A9 08
    sta $4003                                   ; D74F 8D 03 40
    sta $4007                                   ; D752 8D 07 40
    rts                                         ; D755 60

; ----------------------------------------------------------------------------
; unreachable
        jmp     LD78A                           ; D756 4C 8A D7

; ----------------------------------------------------------------------------
; lookup table
LD759:  .byte $63,$96,$01,$4A,$01,$4A,$01,$00
; ----------------------------------------------------------------------------
; lookup table
LD761:  .byte $64,$97,$01,$76,$00,$76,$01,$00
; ----------------------------------------------------------------------------
LD769:
    sta $06D9                                   ; D769 8D D9 06
    ; copy 4 bytes from $D300+Y to $4004 (pulse channel 2)
    jsr RD27A                                   ; D76C 20 7A D2
    lda $EF                                     ; D76F A5 EF
    sta $06FC                                   ; D771 8D FC 06
    ldx #$01                                    ; D774 A2 01
    stx $06C8                                   ; D776 8E C8 06
    inx                                         ; D779 E8
    stx $06C9                                   ; D77A 8E C9 06
    lda #$00                                    ; D77D A9 00
    sta $06DE                                   ; D77F 8D DE 06
    sta $06F9                                   ; D782 8D F9 06
    ldx #$01                                    ; D785 A2 01
    jmp LD563                                   ; D787 4C 63 D5

; ----------------------------------------------------------------------------
LD78A:
    jsr RD8A8                                   ; D78A 20 A8 D8
    jsr RDA3A                                   ; D78D 20 3A DA
    inc $068A                                   ; D790 EE 8A 06
    lda #$00                                    ; D793 A9 00
    sta $06FC                                   ; D795 8D FC 06
    ldx #$01                                    ; D798 A2 01
    lda #$7F                                    ; D79A A9 7F
    sta $4000,x                                 ; D79C 9D 00 40
    sta $4004,x                                 ; D79F 9D 04 40
    rts                                         ; D7A2 60

; ----------------------------------------------------------------------------
VD7A3:
    ldy #<LD328                                 ; D7A3 A0 28
    jsr RD26E                                   ; D7A5 20 6E D2
    lda #$08                                    ; D7A8 A9 08
    ldy #<LD32C                                 ; D7AA A0 2C
    jmp LD769                                   ; D7AC 4C 69 D7

; ----------------------------------------------------------------------------
VD7AF:
    jsr RD7EB                                   ; D7AF 20 EB D7
    jsr RD2AC                                   ; D7B2 20 AC D2
    bne RD7EB                                   ; D7B5 D0 34
    ldx #$00                                    ; D7B7 A2 00
    inc $06E0                                   ; D7B9 EE E0 06
    lda $06E0                                   ; D7BC AD E0 06
    cmp #$12                                    ; D7BF C9 12
    beq LD7E0                                   ; D7C1 F0 1D
    cmp #$09                                    ; D7C3 C9 09
    bcc LD7E6                                   ; D7C5 90 1F
    lda #$B7                                    ; D7C7 A9 B7
    jmp LD7CC                                   ; D7C9 4C CC D7

; ----------------------------------------------------------------------------
LD7CC:
.scope
    pha                                         ; D7CC 48
    lda $06E8                                   ; D7CD AD E8 06
    bne LD7DA                                   ; D7D0 D0 08
    pla                                         ; D7D2 68
LD7D3:
    sta $4000,x                                 ; D7D3 9D 00 40
    sta $4004,x                                 ; D7D6 9D 04 40
    rts                                         ; D7D9 60
LD7DA:
    pla                                         ; D7DA 68
    lda $06E8                                   ; D7DB AD E8 06
    bne LD7D3                                   ; D7DE D0 F3
.endscope
LD7E0:
    lda #$00                                    ; D7E0 A9 00
    sta $06E0                                   ; D7E2 8D E0 06
    rts                                         ; D7E5 60

; ----------------------------------------------------------------------------
LD7E6:  ora     #$B0                            ; D7E6 09 B0
        jmp     LD7CC                           ; D7E8 4C CC D7

; ----------------------------------------------------------------------------
RD7EB:
    inc $06E4                                   ; D7EB EE E4 06
    lda $06E4                                   ; D7EE AD E4 06
    and #$0F                                    ; D7F1 29 0F
    tay                                         ; D7F3 A8
    lda LD809,y                                 ; D7F4 B9 09 D8
    clc                                         ; D7F7 18
    adc LD328+2                                 ; D7F8 6D 2A D3
    sta $4002                                   ; D7FB 8D 02 40
    lda LD809,y                                 ; D7FE B9 09 D8
    clc                                         ; D801 18
    adc LD32C+2                                 ; D802 6D 2E D3
    sta $4006                                   ; D805 8D 06 40
    rts                                         ; D808 60

; ----------------------------------------------------------------------------
; lookup table
LD809:  .byte $00,$00,$01,$02,$01,$01,$00,$00
        .byte $00,$FF,$FE,$FF,$FF,$00,$00,$00
; ----------------------------------------------------------------------------
RD819:
    lda $06F9                                   ; D819 AD F9 06
    cmp #$0A                                    ; D81C C9 0A
    beq LD83C                                   ; D81E F0 1C
    cmp #$0B                                    ; D820 C9 0B
    beq LD83C                                   ; D822 F0 18
    rts                                         ; D824 60

; ----------------------------------------------------------------------------
; lda $06F9, cmp #9
RD825:
    lda $06F9                                   ; D825 AD F9 06
    cmp #$09                                    ; D828 C9 09
    beq LD83C                                   ; D82A F0 10
    rts                                         ; D82C 60

; ----------------------------------------------------------------------------
; lda $06F9, cmp #2/#4/#6.
RD82D:
    lda $06F9                                   ; D82D AD F9 06
    cmp #$02                                    ; D830 C9 02
    beq LD83C ; rts                             ; D832 F0 08
    cmp #$04                                    ; D834 C9 04
    beq LD83C ; rts                             ; D836 F0 04
    cmp #$06                                    ; D838 C9 06
    beq LD83C ; rts                             ; D83A F0 00
LD83C:
    rts                                         ; D83C 60

; ----------------------------------------------------------------------------
VD83D:
    lda $06E4                                   ; D83D AD E4 06
    beq LD84F                                   ; D840 F0 0D
    inc $06E0                                   ; D842 EE E0 06
    lda $06E0                                   ; D845 AD E0 06
    cmp #$16                                    ; D848 C9 16
    bne LD8B8 ; rts                             ; D84A D0 6C
    jmp RD8A8                                   ; D84C 4C A8 D8

; ----------------------------------------------------------------------------
LD84F:
    lda $06E0                                   ; D84F AD E0 06
    and #$03                                    ; D852 29 03
    tay                                         ; D854 A8
    lda LD38C,y                                 ; D855 B9 8C D3
    sta $4000                                   ; D858 8D 00 40
    inc $06E0                                   ; D85B EE E0 06
    lda $06E0                                   ; D85E AD E0 06
    cmp #$08                                    ; D861 C9 08
    bne LD8B8 ; rts                             ; D863 D0 53
    inc $06E4                                   ; D865 EE E4 06
    ldy #<LD368                                 ; D868 A0 68
    jmp RD26E                                   ; D86A 4C 6E D2

; ----------------------------------------------------------------------------
; pulse 1 vector 8
VD86D:
    jsr RD825 ; lda $06F9, cmp 9                ; D86D 20 25 D8
    beq LD8B8 ; rts                             ; D870 F0 46
    ldy #<LD364                                 ; D872 A0 64
    jmp RD52B                                   ; D874 4C 2B D5

; ----------------------------------------------------------------------------
; pulse 1 vector 7
VD877:
    jsr RD819 ; lda $06F9, cmp 10/11            ; D877 20 19 D8
    beq LD8B8 ; rts                             ; D87A F0 3C
    jsr RD82D ; lda $06F9, cmp 2/4/6            ; D87C 20 2D D8
    beq LD8B8 ; rts                             ; D87F F0 37
    jsr RD825 ; lda $06F9, cmp 9                ; D881 20 25 D8
    beq LD8B8 ; rts                             ; D884 F0 32
    lda #$0F                                    ; D886 A9 0F
    ldy #<LD344                                 ; D888 A0 44
    jmp RD52B                                   ; D88A 4C 2B D5

; ----------------------------------------------------------------------------
; pulse 1 vector 3
VD88D:  jsr RD819 ; lda $06F9, cmp 10/11        ; D88D 20 19 D8
        beq LD8B8 ; rts                         ; D890 F0 26
        jsr RD82D ; lda $06F9, cmp 2/4/6        ; D892 20 2D D8
        beq LD8B8 ; rts                         ; D895 F0 21
        jsr RD825 ; lda $06F9, cmp 9            ; D897 20 25 D8
        beq LD8B8 ; rts                         ; D89A F0 1C
        lda #$02                                ; D89C A9 02
        ldy #<LD36C                             ; D89E A0 6C
        jmp RD52B                               ; D8A0 4C 2B D5

; ----------------------------------------------------------------------------
VD8A3:  jsr     RD2AC                           ; D8A3 20 AC D2
        bne     LD8B8 ; rts                     ; D8A6 D0 10
RD8A8:  lda     #$10                            ; D8A8 A9 10
        sta     $4000                           ; D8AA 8D 00 40
        lda     #$00                            ; D8AD A9 00
        sta     $06C8                           ; D8AF 8D C8 06
        sta     $06F9                           ; D8B2 8D F9 06
        inc     $068A                           ; D8B5 EE 8A 06
LD8B8:  rts                                     ; D8B8 60

; ----------------------------------------------------------------------------
LD8B9:  rts                                     ; D8B9 60

; ----------------------------------------------------------------------------
VD8BA:  jsr RD2AC                               ; D8BA 20 AC D2
        bne LD8B9                               ; D8BD D0 FA
        inc $06E0                               ; D8BF EE E0 06
        lda $06E0                               ; D8C2 AD E0 06
        cmp #$02                                ; D8C5 C9 02
        if_eq                                   ; D8C7 D0 03
            jmp RD8A8                           ; D8C9 4C A8 D8
        end_if
        ldy #<LD34C                             ; D8CC A0 4C
        jmp RD26E                               ; D8CE 4C 6E D2

; ----------------------------------------------------------------------------
; pulse 1 vector 1
VD8D1:
    jsr RD819 ; lda $06F9, cmp 10/11            ; D8D1 20 19 D8
    beq LD8E6 ; rts                             ; D8D4 F0 10
    jsr RD82D ; lda $06F9, cmp 2/4/6            ; D8D6 20 2D D8
    beq LD8E6 ; rts                             ; D8D9 F0 0B
    jsr RD825 ; lda $06F9, cmp 9                ; D8DB 20 25 D8
    beq LD8E6 ; rts                             ; D8DE F0 06
    lda #$02                                    ; D8E0 A9 02
    ldy #<LD348                                 ; D8E2 A0 48
    ; always branch
    bne RD937 ; jmp RD52B                       ; D8E4 D0 51
LD8E6:
    rts                                         ; D8E6 60

; ----------------------------------------------------------------------------
; pulse 1 vector 5
VD8E7:  jsr RD819 ; lda $06F9, cmp 10/11        ; D8E7 20 19 D8
        beq LD8E6                               ; D8EA F0 FA
        jsr RD82D ; lda $06F9, cmp 2/4/6        ; D8EC 20 2D D8
        beq LD8E6                               ; D8EF F0 F5
        jsr RD825 ; lda $06F9, cmp 9            ; D8F1 20 25 D8
        beq LD8E6                               ; D8F4 F0 F0
        lda #$03                                ; D8F6 A9 03
        ldy #<LD338                             ; D8F8 A0 38
        jsr RD937                               ; D8FA 20 37 D9
VD8FD:  jsr RD2AC                               ; D8FD 20 AC D2
        bne LD8E6                               ; D900 D0 E4
        lda $06E0                               ; D902 AD E0 06
        inc $06E0                               ; D905 EE E0 06
        beq LD91E                               ; D908 F0 14
        cmp #$01                                ; D90A C9 01
        beq LD919                               ; D90C F0 0B
        cmp #$02                                ; D90E C9 02
        beq LD91E                               ; D910 F0 0C
        cmp #$03                                ; D912 C9 03
        bne LD8E6                               ; D914 D0 D0
        jmp RD8A8                               ; D916 4C A8 D8

; ----------------------------------------------------------------------------
LD919:  ldy     #<LD338                         ; D919 A0 38
        jmp     RD26E                           ; D91B 4C 6E D2

; ----------------------------------------------------------------------------
LD91E:  ldy     #<LD33C                         ; D91E A0 3C
        jmp     RD26E                           ; D920 4C 6E D2

; ----------------------------------------------------------------------------
; pulse 1 vector 9
VD923:  lda #$03                                ; D923 A9 03
        ldy #<LD358                             ; D925 A0 58
        jsr RD937                               ; D927 20 37 D9
        lda #$18                                ; D92A A9 18
        bne LD96C                               ; D92C D0 3E
VD92E:  jsr RD2AC                               ; D92E 20 AC D2
        bne LD96F                               ; D931 D0 3C
        ldy #<LD358                             ; D933 A0 58
        bne LD977 ;always                       ; D935 D0 40
RD937:  jmp RD52B                               ; D937 4C 2B D5

; ----------------------------------------------------------------------------
LD93A:  rts                                     ; D93A 60

; ----------------------------------------------------------------------------
; pulse 1 vector 2
VD93B:  jsr RD819 ; lda $06F9, cmp 10/11        ; D93B 20 19 D8
        beq LD93A                               ; D93E F0 FA
        jsr RD825 ; lda $06F9, cmp 9            ; D940 20 25 D8
        beq LD93A                               ; D943 F0 F5
        lda #$02                                ; D945 A9 02
        ldy #$5C                                ; D947 A0 5C
        jsr RD937                               ; D949 20 37 D9
        lda #$0C                                ; D94C A9 0C
        bne LD96C                               ; D94E D0 1C
VD950:  jsr RD2AC                               ; D950 20 AC D2
        bne LD96F                               ; D953 D0 1A
        ldy #$5C                                ; D955 A0 5C
        bne LD977                               ; D957 D0 1E
; pulse 1 vector 4
VD959:  jsr RD819 ; lda $06F9, cmp 10/11        ; D959 20 19 D8
        beq LD96F                               ; D95C F0 11
        jsr RD825 ; lda $06F9, cmp 9            ; D95E 20 25 D8
        beq LD96F                               ; D961 F0 0C
        lda #$02                                ; D963 A9 02
        ldy #$60                                ; D965 A0 60
        jsr RD937                               ; D967 20 37 D9
LD96A:  lda #$00                                ; D96A A9 00
LD96C:  sta $06E4                               ; D96C 8D E4 06
LD96F:  rts                                     ; D96F 60

; ----------------------------------------------------------------------------
VD970:  jsr     RD2AC                           ; D970 20 AC D2
        bne     LD96F                           ; D973 D0 FA
        ldy     #<LD360                         ; D975 A0 60
LD977:  jsr     RD26E                           ; D977 20 6E D2
        clc                                     ; D97A 18
        lda     $06E4                           ; D97B AD E4 06
        adc     $06E0                           ; D97E 6D E0 06
        tay                                     ; D981 A8
        lda     LD9E4,y                         ; D982 B9 E4 D9
        sta     $4002                           ; D985 8D 02 40
        ldy     $06E0                           ; D988 AC E0 06
        lda     LD9D7,y                         ; D98B B9 D7 D9
        sta     $4000                           ; D98E 8D 00 40
        bne     LD996                           ; D991 D0 03
        jmp     RD8A8                           ; D993 4C A8 D8

; ----------------------------------------------------------------------------
LD996:  inc     $06E0                           ; D996 EE E0 06
LD999:  rts                                     ; D999 60

; ----------------------------------------------------------------------------
; pulse 1 vector 11
VD99A:  lda     #$12                            ; D99A A9 12
        ldy     #<LD354                         ; D99C A0 54
        jmp     RD52B                           ; D99E 4C 2B D5

; ----------------------------------------------------------------------------
VD9A1:  jsr     RD2AC                           ; D9A1 20 AC D2
        bne     LD999                           ; D9A4 D0 F3
        inc     $06E0                           ; D9A6 EE E0 06
        lda     $06E0                           ; D9A9 AD E0 06
        cmp     #$03                            ; D9AC C9 03
        bne     LD9B3                           ; D9AE D0 03
        jmp     RD8A8                           ; D9B0 4C A8 D8

; ----------------------------------------------------------------------------
LD9B3:  ldy     #<LD354                         ; D9B3 A0 54
        jmp     RD26E                           ; D9B5 4C 6E D2

; ----------------------------------------------------------------------------
; pulse 1 vector 10
VD9B8:  lda     #$07                            ; D9B8 A9 07
        ldy     #<LD350                         ; D9BA A0 50
        jmp     RD52B                           ; D9BC 4C 2B D5

; ----------------------------------------------------------------------------
VD9BF:  jsr     RD2AC                           ; D9BF 20 AC D2
        bne     LD999                           ; D9C2 D0 D5
        inc     $06E0                           ; D9C4 EE E0 06
        lda     $06E0                           ; D9C7 AD E0 06
        cmp     #$05                            ; D9CA C9 05
        bne     LD9D1                           ; D9CC D0 03
        jmp     RD8A8                           ; D9CE 4C A8 D8

; ----------------------------------------------------------------------------
LD9D1:  ldy     #<LD350                         ; D9D1 A0 50
        jmp     RD26E                           ; D9D3 4C 6E D2

; ----------------------------------------------------------------------------
LD9D6:  rts                                     ; D9D6 60

; ----------------------------------------------------------------------------
; lookup table
LD9D7:  .byte $BD,$BB,$BA,$B9,$B8,$B7,$B6,$B4
        .byte $B3,$B2,$B2,$B1,$00
; ----------------------------------------------------------------------------
; lookup table
LD9E4:  .byte $F0,$60,$E0,$70,$D0,$80,$C0,$90
        .byte $F0,$60,$E0,$70,$60,$80,$60,$80
        .byte $60,$80,$60,$80,$60,$80,$60,$80
        .byte $E0,$D0,$C0,$B0,$A0,$90,$80,$70
        .byte $60,$50,$50,$40

; ----------------------------------------------------------------------------
VDA08:
    jsr RD2AC                                   ; DA08 20 AC D2
    bne LD9D6                                   ; DA0B D0 C9
    ldy $06E0                                   ; DA0D AC E0 06
    inc $06E0                                   ; DA10 EE E0 06
    lda LDA35,y                                 ; DA13 B9 35 DA
    beq LDA21                                   ; DA16 F0 09
    sta $4002                                   ; DA18 8D 02 40
    lda #$28                                    ; DA1B A9 28
    sta $4003                                   ; DA1D 8D 03 40
    rts                                         ; DA20 60

; ----------------------------------------------------------------------------
LDA21:
    jmp RD8A8                                   ; DA21 4C A8 D8

; ----------------------------------------------------------------------------
; pulse 1 vector 6
VDA24:  jsr RD819 ; lda $06F9, cmp 10/11        ; DA24 20 19 D8
        beq     LD9D6                           ; DA27 F0 AD
        jsr     RD825 ; lda $06F9, cmp 9        ; DA29 20 25 D8
        beq     LD9D6                           ; DA2C F0 A8
        lda     #$05                            ; DA2E A9 05
        ldy     #<LD340                         ; DA30 A0 40
        jmp     RD52B                           ; DA32 4C 2B D5

; ----------------------------------------------------------------------------
LDA35:  .byte $A8,$8D,$A8,$D4,$00               ; DA35 A8 8D A8 D4 00
; ----------------------------------------------------------------------------
; called from one place
RDA3A:
    lda #$10                                    ; DA3A A9 10
    sta $4004                                   ; DA3C 8D 04 40
    lda #$00                                    ; DA3F A9 00
    sta $06C9                                   ; DA41 8D C9 06
    sta $06FA                                   ; DA44 8D FA 06
    rts                                         ; DA47 60
; ----------------------------------------------------------------------------
VDA48:
    lda #$3F                                    ; DA48 A9 3F
    ldy #$60                                    ; DA4A A0 60
    ldx #$0F                                    ; DA4C A2 0F
LDA4E:
    bne LDA58                                   ; DA4E D0 08
VDA50:
    lda #$3F                                    ; DA50 A9 3F
    ldy #$60                                    ; DA52 A0 60
    ldx #$0E                                    ; DA54 A2 0E
    bne LDA58                                   ; DA56 D0 00
LDA58:
    sta $4013                                   ; DA58 8D 13 40
    sty $4012                                   ; DA5B 8C 12 40
    stx $4010                                   ; DA5E 8E 10 40
    lda #$0F                                    ; DA61 A9 0F
    sta $4015                                   ; DA63 8D
    lda #$00                                    ; DA66 A9 00
    sta $4011                                   ; DA68 8D 11 40
    lda #$1F                                    ; DA6B A9 1F
    sta $4015                                   ; DA6D 8D 15 40
    rts                                         ; DA70 60

; ----------------------------------------------------------------------------
; triangle vector 2
VDA71:
    lda #$03                                    ; DA71 A9 03
    ldy #<LD388                                 ; DA73 A0 88
    jmp RD52B                                   ; DA75 4C 2B D5

; ----------------------------------------------------------------------------
; triangle vector 2'
VDA78:
    jsr RD2AC                                   ; DA78 20 AC D2
    bne LDA8D                                   ; DA7B D0 10
RDA7D:
    lda #$00                                    ; DA7D A9 00
    sta $4008                                   ; DA7F 8D 08 40
    sta $06CA                                   ; DA82 8D CA 06
    sta $06FB                                   ; DA85 8D FB 06
    lda #$18                                    ; DA88 A9 18
    sta $400B                                   ; DA8A 8D 0B 40
LDA8D:
    rts                                         ; DA8D 60

; ----------------------------------------------------------------------------
; triangle vector 1'
VDA8E:  jsr     RD2AC                           ; DA8E 20 AC D2
        beq     LDAA3                           ; DA91 F0 10
        sta     $400A                           ; DA93 8D 0A 40
        lda     $06E6                           ; DA96 AD E6 06
        adc     $06E1                           ; DA99 6D E1 06
        sta     $06E6                           ; DA9C 8D E6 06
        sta     $400A                           ; DA9F 8D 0A 40
        rts                                     ; DAA2 60

; ----------------------------------------------------------------------------
LDAA3:  lda     $06E2                           ; DAA3 AD E2 06
        sta     $06E6                           ; DAA6 8D E6 06
        ldy     $06EA                           ; DAA9 AC EA 06
        jsr     RD272                           ; DAAC 20 72 D2
        rts                                     ; DAAF 60

; ----------------------------------------------------------------------------
; triangle vector 1
VDAB0:  lda     #$1B                            ; DAB0 A9 1B
        ldy     #<LD384                         ; DAB2 A0 84
        jsr     RD52B                           ; DAB4 20 2B D5
        lda     LD384+2                         ; DAB7 AD 86 D3
        sta     $06E6                           ; DABA 8D E6 06
        sta     $06E2                           ; DABD 8D E2 06
        lda     #$84                            ; DAC0 A9 84
        sta     $06EA                           ; DAC2 8D EA 06
        lda     #$FC                            ; DAC5 A9 FC
        sta     $06E1                           ; DAC7 8D E1 06
        rts                                     ; DACA 60

; ----------------------------------------------------------------------------
; triangle vector 3
VDACB:  lda     #$1B                            ; DACB A9 1B
        bne LDAD1 ;always                       ; DACD D0 02
; triangle vector 4
VDACF:  lda     #$23                            ; DACF A9 23
LDAD1:  ldy     #<LD380                         ; DAD1 A0 80
        jsr     RD52B                           ; DAD3 20 2B D5
        lda     LD380+2                         ; DAD6 AD 82 D3
        sta     $06E6                           ; DAD9 8D E6 06
        sta     $06E2                           ; DADC 8D E2 06
        lda     #$80                            ; DADF A9 80
        sta     $06EA                           ; DAE1 8D EA 06
        lda     #$05                            ; DAE4 A9 05
        sta     $06E1                           ; DAE6 8D E1 06
        rts                                     ; DAE9 60

; ============================================================================
.scope RDAFB

LDAEA:  jmp RD4E5                               ; DAEA 4C E5 D4

LDAED:  pha                                     ; DAED 48
        lda $06FD                               ; DAEE AD FD 06
        cmp #$06                                ; DAF1 C9 06
        bne LDAF7                               ; DAF3 D0 02
        pla                                     ; DAF5 68
        rts                                     ; DAF6 60

LDAF7:  pla                                     ; DAF7 68
        jmp LDB0B                               ; DAF8 4C 0B DB

; called from one place
RDAFB:
        lda $06F5                               ; DAFB AD F5 06
        tay                                     ; DAFE A8
        cmp #$FF                                ; DAFF C9 FF
        beq LDAEA ; jmp RD4E5                   ; DB01 F0 E7
        cmp #$00                                ; DB03 C9 00
        beq LDB27                               ; DB05 F0 20
        cmp #$06                                ; DB07 C9 06
        beq LDAED                               ; DB09 F0 E2
LDB0B:  sta $EF                                 ; DB0B 85 EF
        sta $06CC                               ; DB0D 8D CC 06
        dec $06CC                               ; DB10 CE CC 06
        lda LDB2D,y                             ; DB13 B9 2D DB
        sta $067E                               ; DB16 8D 7E 06
        lda #$7F                                ; DB19 A9 7F
        sta $06C0                               ; DB1B 8D C0 06
        sta $06C1                               ; DB1E 8D C1 06
        jsr RDC83 ; initialize variables        ; DB21 20 83 DC
LDB24:  jmp LDDEF                               ; DB24 4C EF DD

; [$06F5] == 0
LDB27:  lda $06FD                               ; DB27 AD FD 06
        bne LDB24                               ; DB2A D0 F8
        rts                                     ; DB2C 60

; ----------------------------------------------------------------------------
; lookup table
LDB2D:  .byte $00,$00,$0D,$0A,$0B,$04,$0B,$00
        .byte $00,$00,$00,$00,$00
; ----------------------------------------------------------------------------
; interleaved lookup table with 3-byte entries
; used by RDF9D
; triples copied to $400C, $400E, $400F
LDB3A:  .byte $00
        .byte $10
        .byte $01
        .byte $18,$00,$01
        .byte $38,$00,$03
        .byte $40,$00,$06
        .byte $58,$00,$0A
        .byte $38,$02,$04
        .byte $40,$13,$05
        .byte $40,$14,$0A
        .byte $40,$14,$08
        .byte $40,$12,$0E
        .byte $08,$16,$0E
        .byte $28,$16,$0B
        .byte $18

; ----------------------------------------------------------------------------
; input in X
; called from one place (DE74)
; immediately preceded by jsr RDD15.
; READS $ee $0680,Y $069a,X $06c3,X $06c8,X $06d1,X
; if X=3 then do nothing.
; RDBBF is called if: X!=3, {$069A,X} has top 3 bits not all zero, {$06C3,X}!=2.
RDB5F:
.scope
        txa                                     ; DB5F 8A
        cmp #$03                                ; DB60 C9 03
        if_ne                                   ; DB62 F0 1D
            lda $069A,x                         ; DB64 BD 9A 06
            and #$E0                            ; DB67 29 E0
            if_ne                               ; DB69 F0 16
                sta $E0                         ; DB6B 85 E0
                lda $06C3,x                     ; DB6D BD C3 06
                cmp #$02                        ; DB70 C9 02
                if_ne                           ; DB72 F0 0A
                    ldy $EE                     ; DB74 A4 EE
                    lda $0680,y                 ; DB76 B9 80 06
                    sta $E1                     ; DB79 85 E1
                    jsr RDBBF                   ; DB7B 20 BF DB
                end_if
                inc $06D1,x                     ; DB7E FE D1 06
            end_if
        end_if
        rts                                     ; DB81 60

e0_80:
e0_c0:
.scope
        lda $E2                                 ; DB82 A5 E2
        cmp #$31                                ; DB84 C9 31
        if_eq                                   ; DB86 D0 02
            lda #$27                            ; DB88 A9 27
        end_if
        tay                                     ; DB8A A8
        lda LDC11,y                             ; DB8B B9 11 DC
        pha                                     ; DB8E 48
            lda $06C3,x                         ; DB8F BD C3 06
            cmp #$46                            ; DB92 C9 46
            bne LDB9B                           ; DB94 D0 05
        pla                                     ; DB96 68
        lda #$00                                ; DB97 A9 00
        ; always taken
        beq LDBF9                               ; DB99 F0 5E
LDB9B:  pla                                     ; DB9B 68
        jmp LDBF9                               ; DB9C 4C F9 DB
.endscope

e0_40:  lda $E2                                 ; DB9F A5 E2
        tay                                     ; DBA1 A8
        cmp #$10                                ; DBA2 C9 10
        if_cc                                   ; DBA4 B0 06
            lda LDC6C,y                         ; DBA6 B9 6C DC
            jmp LDBFF                           ; DBA9 4C FF DB
        end_if
        lda #$F6                                ; DBAC A9 F6
        bne LDBFF ;always                       ; DBAE D0 4F

e0_60:  lda $06C3,x                             ; DBB0 BD C3 06
        cmp #$4C                                ; DBB3 C9 4C
        if_cs                                   ; DBB5 90 04
            lda #$FE                            ; DBB7 A9 FE
            bne LDBFF ;always                   ; DBB9 D0 44
        end_if
        lda #$FE                                ; DBBB A9 FE
        bne LDBFF ;always                       ; DBBD D0 40

; input in X
; ie2 = i6d1[x]
RDBBF:  lda $06D1,x                             ; DBBF BD D1 06
        sta $E2                                 ; DBC2 85 E2
        lda $E0                                 ; DBC4 A5 E0
        cmp #$20                                ; DBC6 C9 20
        beq e0_20                               ; DBC8 F0 14
        cmp #$A0                                ; DBCA C9 A0
        beq e0_a0                               ; DBCC F0 1F
        cmp #$60                                ; DBCE C9 60
        beq e0_60                               ; DBD0 F0 DE
        cmp #$40                                ; DBD2 C9 40
        beq e0_40                               ; DBD4 F0 C9
        cmp #$80                                ; DBD6 C9 80
        beq e0_80                               ; DBD8 F0 A8
        cmp #$C0                                ; DBDA C9 C0
        beq e0_c0                               ; DBDC F0 A4

e0_20:  lda $E2                                 ; DBDE A5 E2
        cmp #$0A                                ; DBE0 C9 0A
        if_eq                                   ; DBE2 D0 02
            lda #$00                            ; DBE4 A9 00
        end_if
        tay                                     ; DBE6 A8
        lda LDC62,y                             ; DBE7 B9 62 DC
        jmp LDBF9                               ; DBEA 4C F9 DB

e0_a0:  lda $E2                                 ; DBED A5 E2
        cmp #$2B                                ; DBEF C9 2B
        if_eq
            lda #$21                            ; DBF3 A9 21
        end_if
        tay                                     ; DBF5 A8
        lda LDC41,y                             ; DBF6 B9 41 DC
; write Y to $06D1+X
LDBF9:  pha                                     ; DBF9 48
            tya                                 ; DBFA 98
            sta $06D1,x                         ; DBFB 9D D1 06
        pla                                     ; DBFE 68

;input A X $e1 $ee $06c8,X
;if $06C8,X != 0 then return
;else $4002+[$EE] = A+[$E1]
LDBFF:  pha                                     ; DBFF 48
            lda $06C8,x                         ; DC00 BD C8 06
            bne LDC0F                           ; DC03 D0 0A
        pla                                     ; DC05 68
        clc                                     ; DC06 18
        adc $E1                                 ; DC07 65 E1
        ldy $EE                                 ; DC09 A4 EE
        sta $4002,y                             ; DC0B 99 02 40
        rts                                     ; DC0E 60

LDC0F:  pla                                     ; DC0F 68
        rts                                     ; DC10 60


; lookup table
LDC11:  .byte $00,$00,$01,$01,$02,$02,$03,$03
        .byte $04,$04,$05,$05,$06,$06,$07,$07
        .byte $08,$08,$09,$09,$0A,$0A,$0B,$0B
        .byte $0C,$0C,$0D,$0D,$0E,$0E,$0F,$0F
        .byte $10,$10,$11,$11,$12,$12,$13,$13
        .byte $14,$14,$15,$15,$16,$16,$17,$17

; lookup table
LDC41:  .byte $00,$00,$00,$00,$00,$00,$00,$00   ; DC41 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$01   ; DC49 00 00 00 00 00 00 00 01
        .byte $00,$00,$00,$00,$FF,$00,$00,$00   ; DC51 00 00 00 00 FF 00 00 00
        .byte $00,$01,$01,$00,$00,$00,$FF,$FF   ; DC59 00 01 01 00 00 00 FF FF
        .byte $00                               ; DC61 00

; 10-byte lookup table
LDC62:  .byte $00,$01,$01,$02,$01,$00,$FF,$FF,$FE,$FF

; lookup table
LDC6C:  .byte $00,$FF,$FE,$FD,$FC,$FB,$FA,$F9
        .byte $F8,$F7,$F6,$F5,$F6,$F7,$F6,$F5

.endscope ;RDB5F

; ----------------------------------------------------------------------------
LDC7C:  lda #$FF                                ; DC7C A9 FF
        sta $06A0,x                             ; DC7E 9D A0 06
        bne LDCD9 ;always                       ; DC81 D0 56

; input: $06CC=(0..11)
; initialize local state
RDC83:  jsr RD4E8 ; initialize APU              ; DC83 20 E8 D4  ; called from one place
        lda $EF                                 ; DC86 A5 EF
        sta $06FD                               ; DC88 8D FD 06
        lda $06CC                               ; DC8B AD CC 06
        tay                                     ; DC8E A8
        lda LE261,y                             ; DC8F B9 61 E2
        tay                                     ; DC92 A8
        ; copy 10 bytes: LE26E,y to $0690
        ; i690, i691, p692[0-3]
        ldx #$00                                ; DC93 A2 00
        loop
            lda LE26E,y                         ; DC95 B9 6E E2
            sta $0690,x                         ; DC98 9D 90 06
            iny                                 ; DC9B C8
            inx                                 ; DC9C E8
            txa                                 ; DC9D 8A
            cmp #$0A                            ; DC9E C9 0A
        while_ne                                ; DCA0 D0 F3
        lda #$01                                ; DCA2 A9 01
        sta $06B4                               ; DCA4 8D B4 06
        sta $06B5                               ; DCA7 8D B5 06
        sta $06B6                               ; DCAA 8D B6 06
        sta $06B7                               ; DCAD 8D B7 06
        ; zero $067F, $EA, $06A8-$06AF
        lda #$00                                ; DCB0 A9 00
        sta $067F                               ; DCB2 8D 7F 06
        sta $EA                                 ; DCB5 85 EA
        ldy #$08                                ; DCB7 A0 08
        loop
            sta $06A7,y                         ; DCB9 99 A7 06
            dey                                 ; DCBC 88
        while_ne                                ; DCBD D0 FA
        tax                                     ; DCBF AA
        ; for X=0,2,4,6
        ; pe6 = p692[x]
        ; if pe6==FFFF then p6a0[x] = FFFF
        ; else p6a0[x] = pe6[0]:pe6[1]
        LDCC0:
            lda $0692,x                         ; DCC0 BD 92 06
            sta $E6                             ; DCC3 85 E6
            lda $0693,x                         ; DCC5 BD 93 06
            ; if FF then output FFFF
            cmp #$FF                            ; DCC8 C9 FF
            beq LDC7C                           ; DCCA F0 B0
            ;else
                sta $E7                         ; DCCC 85 E7
                ldy $06A8 ;always 0             ; DCCE AC A8 06
                lda ($E6),y                     ; DCD1 B1 E6
                sta $06A0,x                     ; DCD3 9D A0 06
                iny                             ; DCD6 C8
                lda ($E6),y                     ; DCD7 B1 E6
            ;endif
            LDCD9:
            sta $06A1,x                         ; DCD9 9D A1 06
            inx                                 ; DCDC E8
            inx                                 ; DCDD E8
            txa                                 ; DCDE 8A
            cmp #$08                            ; DCDF C9 08
        bne LDCC0                               ; DCE1 D0 DD
        rts                                     ; DCE3 60

; ----------------------------------------------------------------------------
; called from one place (DDF2 in RDAFB)
RDCE4:
        lda $068A                               ; DCE4 AD 8A 06
        if_ne                                   ; DCE7 F0 2B
            cmp #$01                            ; DCE9 C9 01
            if_ne
                lda #$7F                        ; DCED A9 7F
                sta $4005                       ; DCEF 8D 05 40
                lda $0684                       ; DCF2 AD 84 06
                sta $4006                       ; DCF5 8D 06 40
                lda $0685                       ; DCF8 AD 85 06
                sta $4007                       ; DCFB 8D 07 40
            end_if
            lda #$7F                            ; DCFE A9 7F
            sta $4001                           ; DD00 8D 01 40
            lda $0680                           ; DD03 AD 80 06
            sta $4002                           ; DD06 8D 02 40
            lda $0681                           ; DD09 AD 81 06
            sta $4003                           ; DD0C 8D 03 40
            lda #$00                            ; DD0F A9 00
            sta $068A                           ; DD11 8D 8A 06
        end_if
LDD14:  rts                                     ; DD14 60

; ----------------------------------------------------------------------------
; called from one place
; input in X
; $ee $069a,X $069d,X $06c3,X $06c8,X $06cd,X
; if X >= 2 then return.
RDD15:
.scope
        txa                                     ; DD15 8A
        cmp #$02                                ; DD16 C9 02
        bcs LDD14 ; if x >= 2 then rts          ; DD18 B0 FA
        ; if i69a[x] & 1f == 0 then rts
        lda $069A,x                             ; DD1A BD 9A 06
        and #$1F                                ; DD1D 29 1F
        beq LDD7A ;rts                          ; DD1F F0 59
        sta $E1                                 ; DD21 85 E1
        lda $06C3,x                             ; DD23 BD C3 06
        cmp #$02                                ; DD26 C9 02
        beq LDD84                               ; DD28 F0 5A
        ldy #$00                                ; DD2A A0 00
        loop
            dec $E1                             ; DD2C C6 E1
            beq break                           ; DD2E F0 04
            iny                                 ; DD30 C8
            iny                                 ; DD31 C8
        while_ne                                ; DD32 D0 F8
        lda LE018,y                             ; DD34 B9 18 E0
        sta $E2                                 ; DD37 85 E2
        lda LE018+1,y                           ; DD39 B9 19 E0
        sta $E3                                 ; DD3C 85 E3
        lda $06CD,x                             ; DD3E BD CD 06
        lsr a                                   ; DD41 4A
        tay                                     ; DD42 A8
        lda ($E2),y                             ; DD43 B1 E2
        sta $E4                                 ; DD45 85 E4
        cmp #$FF                                ; DD47 C9 FF
        beq LDD7B                               ; DD49 F0 30
        cmp #$F0                                ; DD4B C9 F0
        beq LDD80                               ; DD4D F0 31
        lda $06CD,x                             ; DD4F BD CD 06
        and #$01                                ; DD52 29 01
        if_eq                                   ; DD54 D0 08
            lsr $E4                             ; DD56 46 E4
            lsr $E4                             ; DD58 46 E4
            lsr $E4                             ; DD5A 46 E4
            lsr $E4                             ; DD5C 46 E4
        end_if
        lda     $E4                             ; DD5E A5 E4
        and     #$0F                            ; DD60 29 0F
        sta     $E0                             ; DD62 85 E0
        lda     $069D,x                         ; DD64 BD 9D 06
        and     #$F0                            ; DD67 29 F0
        ora     $E0                             ; DD69 05 E0
        tay                                     ; DD6B A8
LDD6C:  inc     $06CD,x                         ; DD6C FE CD 06
LDD6F:  lda     $06C8,x                         ; DD6F BD C8 06
        if_eq                                   ; DD72 D0 06
            tya                                 ; DD74 98
            ldy $EE                             ; DD75 A4 EE
            sta $4000,y                         ; DD77 99 00 40
        end_if
LDD7A:  rts                                     ; DD7A 60

LDD7B:  ldy     $069D,x                         ; DD7B BC 9D 06
        bne     LDD6F                           ; DD7E D0 EF
LDD80:  ldy     #$10                            ; DD80 A0 10
        bne     LDD6F ;always                   ; DD82 D0 EB
LDD84:  ldy     #$10                            ; DD84 A0 10
        bne     LDD6C ;always                   ; DD86 D0 E4
.endscope

; ----------------------------------------------------------------------------
; input X=(0,2,4,6) and Y
; pe6 = p692[x] = pe6[++y]:pe6[++y]
; y = i6a8[x] = 0
LDD88:  iny                                     ; DD88 C8
        lda ($E6),y                             ; DD89 B1 E6
        sta $0692,x                             ; DD8B 9D 92 06
        iny                                     ; DD8E C8
        lda ($E6),y                             ; DD8F B1 E6
        sta $0693,x                             ; DD91 9D 93 06
        lda $0692,x                             ; DD94 BD 92 06
        sta $E6                                 ; DD97 85 E6
        lda $0693,x                             ; DD99 BD 93 06
        sta $E7                                 ; DD9C 85 E7
        txa                                     ; DD9E 8A
        lsr a                                   ; DD9F 4A
        tax                                     ; DDA0 AA
        lda #$00                                ; DDA1 A9 00
        tay                                     ; DDA3 A8
        sta $06A8,x                             ; DDA4 9D A8 06
        jmp LDDC7                               ; DDA7 4C C7 DD

LDDAA:  jsr     RD4E5                           ; DDAA 20 E5 D4
LDDAD:  rts                                     ; DDAD 60

; input X (0 to 3)
; pe6 = p692[x]
; y = i6a8[x] += 2;
LDDAE:  txa                                     ; DDAE 8A
        asl a                                   ; DDAF 0A
        tax                                     ; DDB0 AA
        lda $0692,x                             ; DDB1 BD 92 06
        sta $E6                                 ; DDB4 85 E6
        lda $0693,x                             ; DDB6 BD 93 06
        sta $E7                                 ; DDB9 85 E7
        txa                                     ; DDBB 8A
        lsr a                                   ; DDBC 4A
        tax                                     ; DDBD AA
        inc $06A8,x                             ; DDBE FE A8 06
        inc $06A8,x                             ; DDC1 FE A8 06
        ldy $06A8,x                             ; DDC4 BC A8 06
; input X (0 to 3) and Y
; precondition: pe6 = p692[x] and y = i6a8[x]
; p6a0[x] = pe6[y]:pe6[++y]
; if p6a0[x] == 00xx then LDDAA
; if p6a0[x] == FFxx then LDD88
; i6ac[x] = 0
; i6b4[x] = 1
LDDC7:  txa                                     ; DDC7 8A
        asl a                                   ; DDC8 0A
        tax                                     ; DDC9 AA
        lda ($E6),y                             ; DDCA B1 E6
        sta $06A0,x                             ; DDCC 9D A0 06
        iny                                     ; DDCF C8
        lda ($E6),y                             ; DDD0 B1 E6
        sta $06A1,x                             ; DDD2 9D A1 06
        cmp #$00                                ; DDD5 C9 00
        beq LDDAA                               ; DDD7 F0 D1
        cmp #$FF                                ; DDD9 C9 FF
        beq LDD88                               ; DDDB F0 AB
        txa                                     ; DDDD 8A
        lsr a                                   ; DDDE 4A
        tax                                     ; DDDF AA
        lda #$00                                ; DDE0 A9 00
        sta $06AC,x                             ; DDE2 9D AC 06
        lda #$01                                ; DDE5 A9 01
        sta $06B4,x                             ; DDE7 9D B4 06
        bne LDE0C ;always                       ; DDEA D0 20

; case 00
LDDEC:  jmp LDDAE                               ; DDEC 4C AE DD

; continuation of RDAFB
LDDEF:
        inc $067F                               ; DDEF EE 7F 06
        jsr RDCE4                               ; DDF2 20 E4 DC
        lda #$00                                ; DDF5 A9 00
        tax                                     ; DDF7 AA
        sta $EE                                 ; DDF8 85 EE
        beq LDE0C ;always                       ; DDFA F0 10

; next X
LDDFC:  txa                                     ; DDFC 8A
        lsr a                                   ; DDFD 4A
        tax                                     ; DDFE AA
LDDFF:  inx                                     ; DDFF E8
        txa                                     ; DE00 8A
        cmp #$04                                ; DE01 C9 04
        beq LDDAD ;rts                          ; DE03 F0 A8
        lda $EE                                 ; DE05 A5 EE
        clc                                     ; DE07 18
        adc #$04                                ; DE08 69 04
        sta $EE                                 ; DE0A 85 EE
; input X=(0,1,2,3)
; pe6 = p6a0[x]
; if pe6 == $FFFF then LDDFC
LDE0C:  txa                                     ; DE0C 8A
        asl a                                   ; DE0D 0A
        tax                                     ; DE0E AA
        lda $06A0,x                             ; DE0F BD A0 06
        sta $E6                                 ; DE12 85 E6
        lda $06A1,x                             ; DE14 BD A1 06
        sta $E7                                 ; DE17 85 E7
        lda $06A1,x                             ; DE19 BD A1 06 ;redundant
        cmp #$FF                                ; DE1C C9 FF
        beq LDDFC ; next X                      ; DE1E F0 DC
        txa                                     ; DE20 8A
        lsr a                                   ; DE21 4A
        tax                                     ; DE22 AA
; i6b4[x]--
; if i6b4[x] > 0 then LDE71
.scope
        dec $06B4,x                             ; DE23 DE B4 06
        bne LDE71                               ; DE26 D0 49
; i6cd[x] = 0
; i6d1[x] = 0
        lda #$00                                ; DE28 A9 00
        sta $06CD,x                             ; DE2A 9D CD 06
        sta $06D1,x                             ; DE2D 9D D1 06
; loop start
; invariant: pe6 = p6a0[x]
LDE30:  jsr RE00F ; A = pe6[i6ac[x]++]          ; DE30 20 0F E0
        beq LDDEC ; jmp LDDAE                   ; DE33 F0 B7
        cmp #$9F                                ; DE35 C9 9F
        beq LDE80                               ; DE37 F0 47
        cmp #$9E                                ; DE39 C9 9E
        beq LDE98                               ; DE3B F0 5B
        cmp #$9C                                ; DE3D C9 9C
        beq LDEA1                               ; DE3F F0 60
        tay                                     ; DE41 A8
        cmp #$FF                                ; DE42 C9 FF
        beq LDE4F                               ; DE44 F0 09
        and #$C0                                ; DE46 29 C0
        cmp #$C0                                ; DE48 C9 C0
        beq LDE5F                               ; DE4A F0 13
        jmp LDEAA                               ; DE4C 4C AA DE

; case ff
; loop-end instruction
LDE4F:  lda $06BC,x                             ; DE4F BD BC 06
        beq LDE6E                               ; DE52 F0 1A
        dec $06BC,x                             ; DE54 DE BC 06
        lda $06B0,x                             ; DE57 BD B0 06
        sta $06AC,x                             ; DE5A 9D AC 06
        bne LDE6E                               ; DE5D D0 0F
; case c0-fe (opcode in y)
; loop-start instruction
LDE5F:  tya                                     ; DE5F 98
        and #$3F                                ; DE60 29 3F
        sta $06BC,x                             ; DE62 9D BC 06
        dec $06BC,x                             ; DE65 DE BC 06
        lda $06AC,x                             ; DE68 BD AC 06
        sta $06B0,x                             ; DE6B 9D B0 06
LDE6E:  jmp LDE30 ; loop                        ; DE6E 4C 30 DE

; wait count remaining (i6b4[x] > 0)
LDE71:  jsr RDD15                               ; DE71 20 15 DD
        jsr RDB5F                               ; DE74 20 5F DB
        jmp LDDFF ; next X                      ; DE77 4C FF DD

LDE7A:  jmp LDF8E                               ; DE7A 4C 8E DF

LDE7D:  jmp LDF64                               ; DE7D 4C 64 DF

; case 9f
LDE80:  jsr RE00F ; A = pe6[i6ac[x]++]          ; DE80 20 0F E0
        sta $069A,x                             ; DE83 9D 9A 06
        jsr RE00F ; A = pe6[i6ac[x]++]          ; DE86 20 0F E0
        sta $069D,x                             ; DE89 9D 9D 06
        jmp LDE30                               ; DE8C 4C 30 DE

;unreachable
        jsr RE00F ; A = pe6[i6ac[x]++]          ; DE8F 20 0F E0
        jsr RE00F ; A = pe6[i6ac[x]++]          ; DE92 20 0F E0
        jmp LDE30                               ; DE95 4C 30 DE

; case 9e
; set song tempo
LDE98:  jsr RE00F ; A = pe6[i6ac[x]++]          ; DE98 20 0F E0
        sta $0691                               ; DE9B 8D 91 06
        jmp LDE30                               ; DE9E 4C 30 DE

; case 9c
LDEA1:  jsr RE00F ; A = pe6[i6ac[x]++]          ; DEA1 20 0F E0
        sta $0690                               ; DEA4 8D 90 06
        jmp LDE30                               ; DEA7 4C 30 DE

; case 01-bf (opcode in y)
LDEAA:  tya                                     ; DEAA 98
        and #$B0                                ; DEAB 29 B0
        cmp #$B0                                ; DEAD C9 B0
        bne LDEC9                               ; DEAF D0 18
; case b0-bf (opcode in y)
; set note duration
        tya                                     ; DEB1 98
        and #$0F                                ; DEB2 29 0F
        clc                                     ; DEB4 18
        adc $0691                               ; DEB5 6D 91 06
        tay                                     ; DEB8 A8
        lda LE204,y                             ; DEB9 B9 04 E2
        sta $06B8,x                             ; DEBC 9D B8 06
        tay                                     ; DEBF A8
        txa                                     ; DEC0 8A
        cmp #$02                                ; DEC1 C9 02
        beq LDE7D ; jmp LDF64                   ; DEC3 F0 B8

LDEC5:  jsr RE00F ; A = pe6[i6ac[x]++]          ; DEC5 20 0F E0
        tay                                     ; DEC8 A8
; case 01-af (opcode in y)
LDEC9:  tya                                     ; DEC9 98
        sta $06C3,x                             ; DECA 9D C3 06
        txa                                     ; DECD 8A
        cmp #$03                                ; DECE C9 03
        beq LDE7A ; jmp LDF8E                   ; DED0 F0 A8
        ; x=0,1,2
        pha                                     ; DED2 48
            ldx $EE                             ; DED3 A6 EE
            lda LE16A+1,y                         ; DED5 B9 6B E1
            if_ne                               ; DED8 F0 24
                lda $0690                       ; DEDA AD 90 06
                if_mi                           ; DEDD 10 0B
                    and #$7F                    ; DEDF 29 7F
                    sta $E3                     ; DEE1 85 E3
                    tya                         ; DEE3 98
                    clc                         ; DEE4 18
                    sbc $E3                     ; DEE5 E5 E3
                else                            ; DEE7 4C EF DE
                    tya                         ; DEEA 98
                    clc                         ; DEEB 18
                    adc $0690                   ; DEEC 6D 90 06
                end_if
                tay                             ; DEEF A8
                lda LE16A+1,y                     ; DEF0 B9 6B E1
                sta $0680,x                     ; DEF3 9D 80 06
                lda LE16A,y                     ; DEF6 B9 6A E1
                ora #$08                        ; DEF9 09 08
                sta $0681,x                     ; DEFB 9D 81 06
            end_if
            tay                                 ; DEFE A8
        pla                                     ; DEFF 68
        tax                                     ; DF00 AA
        tya                                     ; DF01 98
        .scope
        bne     LDF13                           ; DF02 D0 0F
        lda     #$00                            ; DF04 A9 00
        sta     $E0                             ; DF06 85 E0
        txa                                     ; DF08 8A
        cmp     #$02                            ; DF09 C9 02
        beq     LDF18                           ; DF0B F0 0B
        lda     #$10                            ; DF0D A9 10
        sta     $E0                             ; DF0F 85 E0
        bne     LDF18                           ; DF11 D0 05  ;always branch
        LDF13:
        lda     $069D,x                         ; DF13 BD 9D 06
        sta     $E0                             ; DF16 85 E0
        LDF18:
        .endscope
        txa                                     ; DF18 8A
        dec     $06C8,x                         ; DF19 DE C8 06
        cmp     $06C8,x                         ; DF1C DD C8 06
        beq     LDF5E                           ; DF1F F0 3D
        inc     $06C8,x                         ; DF21 FE C8 06
        ldy     $EE                             ; DF24 A4 EE
        txa                                     ; DF26 8A
        cmp     #$02                            ; DF27 C9 02
        .scope
        beq     LDF3E                           ; DF29 F0 13
        lda     $069A,x                         ; DF2B BD 9A 06
        and     #$1F                            ; DF2E 29 1F
        beq     LDF3E                           ; DF30 F0 0C
        lda     $E0                             ; DF32 A5 E0
        cmp     #$10                            ; DF34 C9 10
        beq     LDF40                           ; DF36 F0 08
        and     #$F0                            ; DF38 29 F0
        ora     #$00                            ; DF3A 09 00
        bne     LDF40                           ; DF3C D0 02
        LDF3E:
        lda     $E0                             ; DF3E A5 E0
        LDF40:
        .endscope
        sta $4000,y                             ; DF40 99 00 40
        lda $06C0,x                             ; DF43 BD C0 06
        sta $4001,y                             ; DF46 99 01 40
        lda $0680,y                             ; DF49 B9 80 06
        sta $4002,y                             ; DF4C 99 02 40
        lda $0681,y                             ; DF4F B9 81 06
        sta $4003,y                             ; DF52 99 03 40
LDF55:  lda $06B8,x                             ; DF55 BD B8 06
        sta $06B4,x                             ; DF58 9D B4 06
        jmp LDDFF                               ; DF5B 4C FF DD

LDF5E:  inc     $06C8,x                         ; DF5E FE C8 06
        jmp     LDF55                           ; DF61 4C 55 DF

; opcode b0-bf, x = 2, y = i68b[2] = LE204[i691 + (opcode - b0)]
LDF64:  lda     $069C                           ; DF64 AD 9C 06
        and     #$1F                            ; DF67 29 1F
        bne     LDF88                           ; DF69 D0 1D
        lda     $069C                           ; DF6B AD 9C 06
        and     #$C0                            ; DF6E 29 C0
        bne     LDF75                           ; DF70 D0 03
LDF72:  tya                                     ; DF72 98
        bne     LDF7D                           ; DF73 D0 08
LDF75:  cmp     #$C0                            ; DF75 C9 C0
        beq     LDF72                           ; DF77 F0 F9
        lda     #$FF                            ; DF79 A9 FF
        bne     LDF88 ; always                  ; DF7B D0 0B

LDF7D:  clc                                     ; DF7D 18
        adc     #$FF                            ; DF7E 69 FF
        asl     a                               ; DF80 0A
        asl     a                               ; DF81 0A
        cmp     #$3C                            ; DF82 C9 3C
        if_cs                                   ; DF84 90 02
            lda #$3C                            ; DF86 A9 3C
        end_if
LDF88:  sta     $069F                           ; DF88 8D 9F 06
        jmp     LDEC5                           ; DF8B 4C C5 DE

; case 01-af (opcode in y), x = 3
LDF8E:  tya                                     ; DF8E 98
        pha                                     ; DF8F 48
            jsr RDFB5                           ; DF90 20 B5 DF
        pla                                     ; DF93 68
        and #$1F                                ; DF94 29 1F
        tay                                     ; DF96 A8
        jsr RDF9D                               ; DF97 20 9D DF
        jmp LDF55                               ; DF9A 4C 55 DF
.endscope

; ----------------------------------------------------------------------------
; if $06F8 is zero, then copy $db3a array entries to APU Noise channel registers
; input: Y
; READS $06f8 $db3a,Y $db3b,Y $db3c,Y WRITES $400c $400e $400f
; called from one place
RDF9D:  lda $06F8                               ; DF9D AD F8 06
        if_eq                                   ; DFA0 D0 12
            lda LDB3A,y                         ; DFA2 B9 3A DB
            sta $400C                           ; DFA5 8D 0C 40
            lda LDB3A+1,y                       ; DFA8 B9 3B DB
            sta $400E                           ; DFAB 8D 0E 40
            lda LDB3A+2,y                       ; DFAE B9 3C DB
            sta $400F                           ; DFB1 8D 0F 40
        end_if
        rts                                     ; DFB4 60

; ----------------------------------------------------------------------------
; DMC channel
; input: Y
; READS $06f7
; WRITES $e1 $4010 $4011 $4012 $4013 $4015
; called from one place
; Y=2x: $e1=0E, A=07, Y=F4 (freq 14, address $FD00, length 112)
; Y=4x: $e1=07, A=07, Y=F4 (freq 07, address $FD00, length 112)
; Y=6x: $e1=0F, A=0F, Y=F6 (freq 15, address $FD80, length 240)
; Y=8x: $e1=0E, A=0F, Y=F6 (freq 14, address $FD80, length 240)
; $4012 sample address = Y
; $4013 sample length = A
; $4010 frequency index = $e1 (if $06f7 = 0) (IRQ enable, loop, frequency index 1)
; $4011 direct load = #$00 (if $06f7 = 0)
; $4015 enable all channels (if $06f7 = 0))
RDFB5:
.scope
        ; case on the top 3 bits of Y
        tya                                     ; DFB5 98
        and     #$E0                            ; DFB6 29 E0
        cmp     #$40                            ; DFB8 C9 40
        beq     case4                           ; DFBA F0 21
        cmp     #$80                            ; DFBC C9 80
        beq     case8                           ; DFBE F0 27
        cmp     #$20                            ; DFC0 C9 20
        beq     case2                           ; DFC2 F0 05
        cmp     #$60                            ; DFC4 C9 60
        beq     case6                           ; DFC6 F0 0B
        ; 000,101,110,111 do nothing
        rts                                     ; DFC8 60

case2:  lda #$0E                                ; DFC9 A9 0E
        sta $E1                                 ; DFCB 85 E1
        lda #$07                                ; DFCD A9 07
        ldy #$F4                                ; DFCF A0 F4
        bne final                               ; DFD1 D0 1C
case6:  lda #$0F                                ; DFD3 A9 0F
        sta $E1                                 ; DFD5 85 E1
        lda #$0F                                ; DFD7 A9 0F
        ldy #$F6                                ; DFD9 A0 F6
        bne final                               ; DFDB D0 12
case4:  lda #$07                                ; DFDD A9 07
        sta $E1                                 ; DFDF 85 E1
        lda #$07                                ; DFE1 A9 07
        ldy #$F4                                ; DFE3 A0 F4
        bne final                               ; DFE5 D0 08
case8:  lda #$0E                                ; DFE7 A9 0E
        sta $E1                                 ; DFE9 85 E1
        lda #$0F                                ; DFEB A9 0F
        ldy #$F6                                ; DFED A0 F6
final:  sta $4013                               ; DFEF 8D 13 40
        sty $4012                               ; DFF2 8C 12 40
        lda $06F7                               ; DFF5 AD F7 06
        if_eq                                   ; DFF8 D0 14
            lda $E1                             ; DFFA A5 E1
            sta $4010                           ; DFFC 8D 10 40
            lda #$0F                            ; DFFF A9 0F
            sta $4015                           ; E001 8D 15 40
            lda #$00                            ; E004 A9 00
            sta $4011                           ; E006 8D 11 40
            lda #$1F                            ; E009 A9 1F
            sta $4015                           ; E00B 8D 15 40
        end_if
        rts                                     ; E00E 60
.endscope

; ----------------------------------------------------------------------------
; input X=(0,1,2,3)
; A = pe6[i6ac[x]++]
RE00F:  ldy     $06AC,x                         ; E00F BC AC 06
        inc     $06AC,x                         ; E012 FE AC 06
        lda     ($E6),y                         ; E015 B1 E6
        rts                                     ; E017 60

; ----------------------------------------------------------------------------
; array of pointers, used in RDD15
LE018:
.scope
        .word LE056,LE062,LE165,LE06C
        .word LE07A,LE081,LE085,LE089
        .word LE090,LE095,LE0B7,LE0C0
        .word LE0C7,LE0D1,LE0D7,LE0F0
        .word LE0FA,LE0FF,LE108,LE10D
        .word LE112,LE118,LE122,LE12C
        .word LE133,LE139,LE13F,LE14F
        .word LE155,LE15B,LE160

LE056:  .byte $00,$B9,$99,$98,$88,$88,$77,$77,$77,$77,$11,$F0
LE062:  .byte $00,$00,$00,$0B,$BA,$98,$88,$88,$89,$F0
LE06C:  .byte $00,$98,$88,$88,$88,$88,$88,$88,$88,$88,$88,$88,$88,$F0
LE07A:  .byte $0F,$FE,$BB,$BB,$AA,$AA,$F0
LE081:  .byte $84,$31,$10,$F0
LE085:  .byte $A9,$92,$22,$F0
LE089:  .byte $97,$65,$43,$33,$21,$11,$F0
LE090:  .byte $A8,$81,$11,$11,$F0
LE095:  .byte $AA,$A1,$11,$11,$11,$11,$11,$22,$22,$33,$34,$44,$45,$55,$66,$67,$77,$76,$66,$55,$54,$44,$44,$33,$33,$33,$22,$22,$22,$11,$11,$11,$11,$F0
LE0B7:  .byte $07,$74,$11,$11,$11,$11,$11,$11,$F0
LE0C0:  .byte $77,$21,$33,$11,$11,$11,$F0
LE0C7:  .byte $22,$33,$44,$55,$66,$77,$77,$88,$66,$FF
LE0D1:  .byte $08,$77,$11,$11,$11,$F0
LE0D7:  .byte $FE,$A9,$98,$77,$77,$66,$66,$55,$55,$44,$44,$33,$33,$22,$22,$22,$11,$11,$11,$11,$11,$11,$11,$11,$F0
LE0F0:  .byte $B9,$11,$10,$74,$11,$10,$32,$11,$11,$FF
LE0FA:  .byte $76,$54,$32,$21,$F0
LE0FF:  .byte $00,$43,$22,$22,$22,$22,$22,$21,$F0
LE108:  .byte $EB,$97,$53,$21,$FF
LE10D:  .byte $76,$66,$65,$55,$FF
LE112:  .byte $00,$03,$54,$44,$44,$FF
LE118:  .byte $69,$87,$77,$76,$55,$55,$55,$55,$55,$FF
LE122:  .byte $23,$33,$44,$33,$33,$33,$33,$33,$33,$FF
LE12C:  .byte $00,$54,$32,$21,$11,$11,$F0
LE133:  .byte $63,$32,$21,$11,$11,$F0
LE139:  .byte $23,$22,$22,$22,$22,$FF
LE13F:  .byte $76,$63,$31,$11,$11,$11,$11,$00,$00,$00,$54,$22,$21,$10,$00,$FF
LE14F:  .byte $54,$32,$21,$11,$11,$F0
LE155:  .byte $43,$32,$22,$11,$11,$F0
LE15B:  .byte $32,$22,$21,$11,$F0
LE160:  .byte $21,$11,$11,$10,$F0
LE165:  .byte $11,$11,$11,$11,$F0
.endscope

; ----------------------------------------------------------------------------
; interleaved array of pairs of bytes (9A/154 bytes, 4D/77 pairs)
; used in RDAFB for interpreting music opcodes 01-af
; words are big-endian 11-bit note frequencies
; for use in $4002/$4003, $4006/$4007, or $400A/$400B

LE16A:  .dbyt $07F0,$0000,$06AE,$064E,$05F3,$059E,$054D,$0501,$04B9,$0475,$0435,$03F8
        .dbyt $03BF,$0389,$0357,$0327,$02F9,$02CF,$02A6,$0280,$025C,$023A,$021A,$01FC
        .dbyt $01DF,$01C4,$01AB,$0193,$017C,$0167,$0152,$013F,$012D,$011C,$010C,$00FD
        .dbyt $00EE,$00E1,$00D4,$00C8,$00BD,$00B2,$00A8,$009F,$0096,$008D,$0085,$007E
        .dbyt $0076,$0070,$0069,$0063,$005E,$0058,$0053,$004F,$004A,$0046,$0042,$003E
        .dbyt $003A,$0037,$0034,$0031,$002E,$002B,$0029,$0027,$0024,$0022,$0020,$001E
        .dbyt $001C,$001A,$000A,$0010,$0019

; ----------------------------------------------------------------------------
; lookup table: note durations
; used in RDAFB
; values are copied to $06B8,x
; $0691 ($00,$18,$28,$35,$4F) added to indices

; Various offsets include the subsequence [1,2,4,8,16,6,12,3,8/3,4/3,1/2]
; respectively multiplied by a number from 4 to 10.

LE204:  .byte $04,$08,$10,$20,$40,$18,$30,$0C,$0A,$05,$02,$01      ; LE204 + $00
        .byte $05,$0A,$14,$28,$50,$1E,$3C,$0F,$0D,$06,$02,$01
        .byte $06,$0C,$18,$30,$60,$24,$48,$12,$10,$08,$03,$01      ; LE204 + $18
        .byte $04,$02,$00,$90
        .byte $07,$0E,$1C,$38,$70,$2A,$54,$15,$12,$09,$03,$01      ; LE204 + $28
        .byte $02
        .byte $08,$10,$20,$40,$80,$30,$60,$18,$15,$0A,$04,$01      ; LE204 + $35
        .byte $02,$C0
        .byte $09,$12,$24,$48,$90,$36,$6C,$1B,$18,$0C,$04,$01
        .byte $0A,$14,$28,$50,$A0,$3C,$78,$1E,$1A,$0D,$05,$01      ; LE204 + $4F
        .byte $02,$17

;  4,  6,  7,  8, 10  sixteenth note
;  8, 12, 14, 16, 20  eighth note
; 16, 24, 28, 32, 40  quarter note
; 32, 48, 56, 64, 80  half note
; 64, 96,112,128,160  whole note
; 24, 36, 42, 48, 60  dotted quarter note
; 48, 72, 84, 96,120  dotted half note
; 12, 18, 21, 24, 30  dotted eighth note
; 10, 16, 18, 21, 26  quarter-triplet
;  5,  8,  9, 10, 13  eighth-triplet
;  2,  3,  3,  4,  5  32nd note

; ----------------------------------------------------------------------------
; lookup table
; indexed by $06CC
; values are indexes into LE26E.
; used in RDC83
LE261:  .byte $5A,$1E,$28,$14,$3C,$50,$32,$6E,$00,$0A,$46,$64,$78


; ----------------------------------------------------------------------------
; lookup table
; each 10-byte record is copied to $0690-$0699.
; $0690 is a shift (positive or negative) into LE16A that determines song key.
; $0690 values are stored in a sign-magnitude form (xor negatives with $7f).
; $0690 values: $00,$04,$08,$81,$83,$85,$87 (0,+4,+8,-2,-4,-6,-8) (all even)
; $0691 values: $00,$18,$28,$35,$4F
; $0691 is an offset into LE204 that determines the song tempo.
; $0692 words are pointers to pointers to bytes.
; used in RDC83
LE26E:
.scope
    .byte $85,$18 ;00
    .word LF47B,LF48B,LF499,LF4A3
    .byte $00,$18 ;0A
    .word LF5EB,LF5F1,LF5F5,LF5F9
    .byte $00,$18 ;14
    .word LE8F8,LE90C,LE920,LE934
    .byte $00,$28 ;1E
    .word LE2F0,LE30A,LE320,LE332
    .byte $00,$35 ;28
    .word LF668,$FFFF,$FFFF,$FFFF
    .byte $81,$18 ;32
    .word LEFE6,LEFF2,LEFFE,LF00A
    .byte $87,$00 ;3C
    .word LF674,LF684,LF692,LF69E
    .byte $83,$35 ;46
    .word LED9E,LEDAC,LEDB8,LEDC2
    .byte $04,$18 ;50
    .word LF16C,LF174,LF184,LF18C
    .byte $00,$35 ;5A
    .word LF882,LF8A2,LF8C2,LF8E2
    .byte $00,$35 ;64
    .word LF89A,LF8BA,LF8DA,LF8FA
    .byte $08,$4F ;6E
    .word LFA4F,LFA59,LFA61,$FFFF
    .byte $08,$4F ;78
    .word LFA4F,LFA59,LFA61,$FFFF

; array pointers, voice 0
LE2F0:  .word LE346,LE3DC,LE43E,LE483
        .word LE492,LE6F1,LE7D5,LE7E0
        .word LE89F,LE57E,LE585,$FFFF   ; E300
        .word LE2F0+2
; array pointers, voice 1
LE30A:  .word LE367,LE4A9,LE50B
        .word LE550,LE567,LE71B,LE7DD   ; E310
        .word LE88A,LE582,$FFFF,LE30A+2
; array pointers, voice 2
LE320:  .word LE388,LE636,LE666,LE675
        .word LE743,LE8B3,LE600,$FFFF
        .word LE320+2
; array pointers, voice 3
LE332:  .word LE3BC,LE68C,LE6A6
        .word LE6BD,LE6DD,LE788,LE8DB
        .word LE5B8,$FFFF,LE332+2
; array, voice 0
LE346:  .byte $9F,$11
        .byte $30,$B1,$02,$6C,$02,$02,$6C,$02
        .byte $02,$02,$6A,$02,$02,$6A,$02,$02   ; E350
        .byte $02,$02,$02,$68,$02,$02,$68,$02
        .byte $02,$02,$64,$02,$B6,$02,$00
; array, voice 1
LE367:  .byte $9F
        .byte $09,$30,$B1,$02,$72,$02,$02,$72
        .byte $02,$02,$02,$70,$02,$02,$70,$02   ; E370
        .byte $02,$02,$02,$02,$6E,$02,$02,$6E
        .byte $02,$02,$02,$6C,$02,$B6,$02,$00   ; E380
; array, voice 2
LE388:  .byte $9F,$16,$00,$B1,$46,$46,$4C,$46
        .byte $B0,$3C,$3C,$B1,$3C,$42,$44,$46   ; E390
        .byte $46,$4C,$46,$3C,$02,$02,$02,$02
        .byte $46,$4C,$46,$B0,$3C,$3C,$B1,$3C   ; E3A0
        .byte $42,$3C,$B6,$46,$9F,$A0,$00,$BA
        .byte $3C,$3A,$38,$36,$34,$32,$30,$2E   ; E3B0
        .byte $02,$BB,$02,$00
; array, voice 3
LE3BC:  .byte $B2,$04,$44,$04
        .byte $44,$04,$44,$B1,$04,$41,$44,$01   ; E3C0
        .byte $B2,$04,$44,$04,$44,$B1,$07,$41
        .byte $81,$B0,$01,$81,$B0,$81,$81,$B1   ; E3D0
        .byte $01,$81,$01,$00
; array, voice 0
LE3DC:  .byte $9F,$09,$30,$B1
        .byte $02,$54,$02,$02,$54,$02,$02,$02   ; E3E0
        .byte $54,$02,$02,$54,$02,$02,$02,$02
        .byte $02,$54,$02,$02,$54,$02,$02,$02   ; E3F0
        .byte $50,$02,$02,$54,$02,$02,$02,$02
        .byte $02,$54,$02,$02,$54,$02,$02,$02   ; E400
        .byte $54,$02,$02,$54,$02,$02,$02,$02
        .byte $02,$54,$02,$02,$54,$02,$02,$02
        .byte $9F,$06,$30,$BC,$24,$BA,$24,$22
        .byte $22,$20,$BA,$20,$BC,$1E,$BA,$1E
        .byte $1E,$1C,$BC,$1C,$BA,$1A,$1A,$18
        .byte $18,$BA,$16,$16,$BC,$14,$BA,$14
        .byte $12,$B1,$1A,$B5,$02,$00
; array, voice 0
LE43E:  .byte $9F,$6B
        .byte $B1,$B1,$02,$54,$4C,$54,$4C,$B5
        .byte $02,$B1,$46,$46,$4C,$46,$4C,$B5
        .byte $02,$B1,$02,$54,$4C,$54,$5A,$02
        .byte $58,$50,$9F,$8A,$B1,$B4,$56,$9F
        .byte $6B,$B1,$B1,$02,$B0,$54,$54,$B1
        .byte $4C,$54,$4C,$B5,$02,$B1,$46,$46
        .byte $4C,$46,$3C,$B5,$02,$B1,$02,$54
        .byte $4C,$54,$5A,$02,$58,$50,$54,$02
        .byte $B6,$02,$00
; array, voice 0
LE483:  .byte $9F,$AD,$36,$B4,$16
        .byte $12,$10,$B6,$0E,$B0,$0E,$02,$02
        .byte $02,$00
; array, voice 0
LE492:  .byte $9F,$09,$F1,$C4,$B1,$02
        .byte $76,$02,$02,$76,$02,$02,$02,$76
        .byte $02,$02,$76,$02,$02,$02,$02,$FF
        .byte $00
; array, voice 1
LE4A9:  .byte $9F,$09,$30,$B1,$02,$5E,$02
        .byte $02,$5E,$02,$02,$02,$5E,$02,$02
        .byte $5E,$02,$02,$02,$02,$02,$5E,$02
        .byte $02,$5E,$02,$02,$02,$5A,$02,$02
        .byte $5E,$02,$02,$02,$02,$02,$5E,$02
        .byte $02,$5E,$02,$02,$02,$5E,$02,$02
        .byte $5E,$02,$02,$02,$02,$02,$5E,$02
        .byte $02,$5E,$02,$02,$02,$9F,$06,$30
        .byte $BC,$24,$BA,$24,$22,$22,$20,$BA
        .byte $20,$BC,$1E,$BA,$1E,$1E,$1C,$BC
        .byte $1C,$BA,$1A,$1A,$18,$18,$BA,$16
        .byte $16,$BC,$14,$BA,$14,$12,$B1,$1A   ; E500
        .byte $B5,$02,$00
; array, voice 1
LE50B:  .byte $9F,$0A,$B1,$B1,$02
        .byte $54,$4C,$54,$4C,$B5,$02,$B1,$46
        .byte $46,$4C,$46,$4C,$B5,$02,$B1,$02
        .byte $54,$4C,$54,$5A,$02,$58,$50,$9F
        .byte $8A,$B1,$B4,$56,$9F,$0A,$B1,$B1
        .byte $02,$B0,$54,$54,$B1,$4C,$54,$4C
        .byte $B5,$02,$B1,$46,$46,$4C,$46,$3C
        .byte $B5,$02,$B1,$02,$54,$4C,$54,$5A
        .byte $02,$58,$50,$54,$02,$B6,$02,$00
; array, voice 1
LE550:  .byte $9F,$0C,$30,$C7,$B0,$46,$5E,$46
        .byte $46,$5E,$46,$46,$5E,$FF,$46,$5E
        .byte $46,$46,$5E,$02,$02,$02,$00
; array, voice 1
LE567:  .byte $9F
        .byte $09,$B0,$C4,$B1,$02,$7C,$76,$6C
        .byte $7E,$02,$76,$6C,$80,$76,$6C,$7E
        .byte $02,$02,$02,$02,$FF,$00
; array, voice 0
LE57E:  .byte $9F,$19,$31,$00
; array, voice 1
LE582:  .byte $9F,$18,$31
; array, voice 0
LE585:  .byte $C8,$B1,$14
        .byte $16,$16,$16,$FF,$C2,$B0,$16,$16
        .byte $B1,$16,$1C,$20,$B0,$22,$22,$B1
        .byte $22,$20,$1C,$16,$16,$1C,$02,$16
        .byte $16,$1C,$02,$B0,$16,$16,$B1,$16
        .byte $1C,$20,$B0,$22,$22,$B1,$22,$20
        .byte $1C,$B2,$16,$02,$02,$02,$FF,$00
; array, voice 3
LE5B8:  .byte $C3,$B1,$41,$01,$01,$41,$41,$01
        .byte $01,$01,$FF,$41,$01,$01,$41,$B0
        .byte $81,$81,$01,$41,$41,$81,$81,$81
        .byte $C2,$B1,$44,$04,$84,$B0,$04,$07
        .byte $B1,$44,$44,$84,$07,$44,$41,$81
        .byte $B0,$01,$01,$B1,$41,$41,$81,$01
        .byte $44,$04,$84,$B0,$04,$07,$B1,$44
        .byte $44,$84,$07,$44,$01,$01,$B0,$41
        .byte $04,$B1,$41,$01,$01,$01,$FF,$00
; array, voice 2
LE600:  .byte $9F,$16,$00,$C8,$B1,$2C,$2E,$2E   ; E600
        .byte $2E,$FF,$C2,$B0,$2E,$2E,$B1,$2E
        .byte $34,$38,$B0,$3A,$3A,$B1,$3A,$38
        .byte $34,$2E,$2E,$34,$02,$2E,$2E,$34
        .byte $02,$B0,$2E,$2E,$B1,$2E,$34,$38
        .byte $B0,$3A,$3A,$B1,$3A,$38,$34,$B2
        .byte $2E,$02,$02,$02,$FF,$00
; array, voice 2
LE636:  .byte $9F,$16
        .byte $00,$C4,$B1,$2E,$2E,$34,$2E,$B0
        .byte $24,$24,$B1,$24,$2A,$2C,$2E,$2E
        .byte $34,$2E,$24,$02,$02,$02,$02,$2E
        .byte $34,$2E,$B0,$24,$24,$B1,$24,$2A
        .byte $24,$B0,$2E,$2E,$B1,$2E,$34,$2E
        .byte $34,$02,$02,$02,$FF,$00
; array, voice 2
LE666:  .byte $9F,$A0
        .byte $00,$B4,$2E,$34,$38,$B6,$3A,$B0
        .byte $3A,$02,$02,$02,$00
; array, voice 2
LE675:  .byte $9F,$16,$00
        .byte $C4,$B1,$2E,$2E,$34,$34,$2E,$02
        .byte $02,$02,$02,$2E,$34,$34,$2E,$02
        .byte $02,$02,$FF,$00
; array, voice 3
LE68C:  .byte $C7,$B1,$44,$04
        .byte $84,$04,$44,$04,$84,$04,$FF,$44
        .byte $04,$84,$B0,$04,$81,$B0,$81,$81
        .byte $81,$81,$B1,$81,$01,$00
; array, voice 3
LE6A6:  .byte $C7,$B1
        .byte $44,$04,$84,$04,$44,$04,$84,$04
        .byte $FF,$44,$04,$84,$07,$B0,$81,$81
        .byte $B1,$04,$81,$01,$00
; array, voice 3
LE6BD:  .byte $C2,$B1,$04
        .byte $04,$44,$04,$04,$04,$44,$04,$FF
        .byte $C4,$44,$04,$FF,$B1,$44,$44,$44
        .byte $B0,$44,$81,$B0,$81,$81,$81,$81
        .byte $81,$01,$01,$01,$00
; array, voice 3
LE6DD:  .byte $C4,$B1,$44
        .byte $04,$84,$44,$44,$04,$84,$04,$44
        .byte $04,$84,$41,$44,$01,$01,$01,$FF
        .byte $00
; array, voice 0
LE6F1:  .byte $9F,$09,$31,$9C,$04,$C3,$B1
        .byte $02,$50,$02,$02,$50,$02,$02,$02
        .byte $50,$02,$02,$50,$02,$02,$B2,$5A   ; E700
        .byte $FF,$B1,$02,$50,$02,$02,$50,$02
        .byte $02,$5A,$50,$02,$02,$50,$02,$02
        .byte $02,$02,$00
; array, voice 1
LE71B:  .byte $9F,$09,$31,$C3,$B1
        .byte $02,$5A,$02,$02,$5A,$02,$02,$02
        .byte $5A,$02,$02,$5A,$02,$02,$B2,$4C
        .byte $FF,$B1,$02,$5A,$02,$02,$5A,$02
        .byte $02,$02,$5A,$02,$02,$5A,$02,$02
        .byte $02,$02,$00
; array, voice 2
LE743:  .byte $C3,$B4,$02,$FF,$9F
        .byte $A0,$00,$B6,$02,$BA,$3C,$3A,$38
        .byte $36,$34,$32,$30,$2E,$02,$BB,$02
        .byte $9F,$14,$00,$B0,$2A,$2A,$B1,$2A
        .byte $2A,$30,$2A,$2A,$2A,$20,$B0,$2A
        .byte $2A,$B1,$2A,$2A,$30,$2A,$2C,$2A
        .byte $2C,$B0,$2A,$2A,$B1,$2A,$2A,$30
        .byte $2A,$2A,$2A,$20,$B0,$2A,$2A,$B1
        .byte $2A,$2A,$30,$02,$02,$02,$02,$00
; array, voice 3
LE788:  .byte $B1,$44,$04,$84,$04,$44,$04,$84
        .byte $07,$44,$04,$84,$41,$41,$01,$B0
        .byte $81,$81,$B1,$01,$44,$04,$84,$04
        .byte $44,$04,$84,$07,$44,$04,$BA,$81
        .byte $81,$BB,$01,$BA,$81,$81,$BB,$01
        .byte $B1,$44,$B9,$01,$81,$81,$BB,$01
        .byte $B9,$41,$41,$41,$BB,$01,$C3,$B0
        .byte $41,$04,$B1,$01,$84,$04,$44,$04
        .byte $81,$04,$FF,$B1,$44,$04,$84,$44
        .byte $01,$01,$01,$01,$00
; array, voice 0
LE7D5:  .byte $9F,$B7,$32
        .byte $B8,$02,$BC,$02,$00
; array, voice 1
LE7DD:  .byte $9F,$B6,$33
; array, voice 0
LE7E0:  .byte $C8,$B0,$60,$5A,$FF,$B0,$64,$54
        .byte $56,$58,$5A,$5E,$60,$5E,$02,$68
        .byte $64,$60,$5E,$5A,$56,$54,$B1,$56
        .byte $BA,$54,$50,$BB,$02,$BA,$4C,$42
        .byte $BB,$02,$B2,$3E,$B0,$02,$48,$38   ; E800
        .byte $3C,$3E,$42,$46,$42,$50,$46,$48
        .byte $4C,$50,$54,$56,$54,$02,$5A,$48
        .byte $4C,$50,$54,$56,$54,$5A,$5A,$02
        .byte $46,$02,$48,$02,$4C,$50,$4C,$50
        .byte $02,$B2,$54,$B0,$5A,$5A,$02,$46
        .byte $02,$48,$02,$4C,$50,$4C,$50,$02
        .byte $B2,$54,$B9,$54,$60,$64,$BB,$02
        .byte $B9,$62,$60,$5E,$BB,$02,$B9,$5C
        .byte $5A,$58,$BB,$02,$B9,$56,$54,$52
        .byte $BB,$02,$B9,$50,$4E,$4C,$BB,$02
        .byte $B9,$4A,$48,$46,$BB,$02,$B0,$44
        .byte $42,$40,$3E,$BA,$3C,$3A,$BB,$02
        .byte $BA,$38,$36,$BB,$02,$BA,$34,$32
        .byte $BB,$02,$BA,$30,$2E,$BB,$02,$B7
        .byte $5A,$B0,$64,$B1,$62,$5E,$5A,$5E
        .byte $54,$56,$5A,$64,$62,$B3,$64,$B1
        .byte $02,$00
; array, voice 1
LE88A:  .byte $B7,$5E,$B0,$6C,$B1,$68
        .byte $66,$62,$66,$9F,$96,$33,$B2,$5A
        .byte $5E,$68,$B3,$74,$9C,$00,$00
; array, voice 0
LE89F:  .byte $B7
        .byte $5E,$B0,$6C,$B1,$68,$66,$62,$66
        .byte $9F,$97,$33,$B2,$5A,$5E,$68,$B8
        .byte $74,$02,$00
; array, voice 2
LE8B3:  .byte $9F,$13,$00,$C6,$B0
        .byte $34,$34,$02,$02,$02,$9F,$A0,$00
        .byte $B7,$24,$B2,$26,$2A,$9F,$13,$00
        .byte $B0,$30,$02,$2E,$02,$2A,$2E,$02
        .byte $02,$02,$02,$3A,$3C,$02,$34,$02
        .byte $1C,$FF,$00
; array, voice 3
LE8DB:  .byte $C6,$B0,$44,$44,$04
        .byte $01,$84,$44,$B1,$04,$44,$04,$84
        .byte $04,$44,$04,$84,$44,$B0,$44,$01
        .byte $81,$81,$01,$81,$01,$81,$FF,$00

; array pointers, voice 0
LE8F8:  .word LED15,LE948,LEAAD,LEC14
        .word LEAD9,LECA8,LECA8,LED4A   ; E900
        .word $FFFF,LE8F8+2
; array pointers, voice 1
LE90C:  .word $ED24,$E9BD
        .word $EB15,$EC3E,$EB39,$ECBF
        .word $ECBF,$ED4A,$FFFF,LE90C+2
; array pointers, voice 2
LE920:  .word $ED33,$EA2F,$EB6F,$EC5E
        .word $EB9F,$ECD6,$ECD6,$ED57
        .word $FFFF,LE920+2
; array pointers, voice 3
LE934:  .word $ED42,$EA81
        .word $EBDF,$EC9C,$EBEA,$ECED
        .word $ED01,$ED65,$FFFF,LE934+2
; array, voice 0
LE948:  .byte $9F,$0E,$B1,$B1,$38,$3C,$38,$3C
        .byte $3C,$3A,$38,$34,$38,$3C,$38,$38
        .byte $3C,$02,$9F,$05,$B0,$BA,$02,$2A
        .byte $28,$26,$24,$22,$02,$02,$9F,$0E
        .byte $B1,$B1,$38,$3C,$3A,$3C,$3C,$3A
        .byte $38,$3C,$9F,$08,$F0,$C4,$B0,$2A
        .byte $2A,$B1,$2A,$FF,$9F,$0E,$B1,$B1
        .byte $38,$3C,$38,$3C,$3C,$3A,$38,$34
        .byte $38,$3C,$38,$38,$3C,$02,$02,$02
        .byte $38,$3C,$38,$3C,$3C,$3C,$3C,$3C
        .byte $9F,$05,$B0,$BA,$02,$74,$02,$68
        .byte $02,$02,$62,$02,$02,$4C,$02,$5E
        .byte $38,$02,$02,$02,$80,$74,$6C,$46
        .byte $02,$40,$68,$02,$52,$4E,$4A,$46
        .byte $48,$42,$02,$02,$00,$9F,$07,$B1
        .byte $B1,$60,$62,$60,$62,$5E,$5A,$5A
        .byte $5E,$60,$62,$5E,$5A,$5A,$02,$9F
        .byte $05,$B0,$BA,$02,$12,$10,$0E,$0C
        .byte $0A,$02,$02,$9F,$07,$B1,$B1,$60
        .byte $62,$60,$62,$5E,$5A,$5A,$5E,$9F
        .byte $08,$F0,$B0,$1A,$1A,$B1,$1A,$B0
        .byte $1C,$1C,$B1,$1C,$B0,$1E,$1E,$B1
        .byte $1E,$B0,$20,$20,$B1,$20,$9F,$07
        .byte $B1,$B1,$60,$62,$60,$62,$5E,$5A   ; EA00
        .byte $5A,$5E,$60,$62,$5E,$5A,$5A,$02
        .byte $02,$02,$60,$62,$60,$62,$5E,$5A
        .byte $5A,$5E,$9F,$01,$B0,$B0,$80,$74
        .byte $6C,$6A,$02,$74,$68,$02,$52,$4E
        .byte $02,$46,$02,$02,$02,$02,$00,$9F
        .byte $12,$00,$B1,$5A,$5A,$60,$62,$4C
        .byte $4C,$52,$54,$5A,$5A,$60,$62,$4C
        .byte $02,$02,$02,$5A,$5A,$60,$62,$4C
        .byte $4C,$52,$54,$9F,$00,$00,$B0,$2A
        .byte $2A,$B1,$2A,$B0,$2E,$2E,$B1,$2E
        .byte $B0,$30,$30,$B1,$30,$B0,$32,$32
        .byte $B1,$32,$9F,$12,$00,$B1,$5A,$5A
        .byte $60,$62,$4C,$4C,$52,$54,$5A,$5A
        .byte $60,$62,$4C,$02,$02,$02,$5A,$5A
        .byte $60,$62,$4C,$4C,$52,$54,$B4,$02
        .byte $00,$C6,$B0,$07,$04,$07,$01,$FF
        .byte $B2,$01,$20,$C4,$B0,$07,$04,$07
        .byte $01,$FF,$B2,$20,$60,$20,$60,$C6
        .byte $B0,$07,$04,$07,$01,$FF,$B2,$60
        .byte $01,$C4,$B0,$07,$04,$07,$01,$FF
        .byte $B6,$60,$B2,$20,$00
; array, voice 0
LEAAD:  .byte $9F,$0E,$B1
        .byte $B0,$42,$42,$B1,$42,$42,$42,$3E
        .byte $48,$46,$3E,$B0,$42,$42,$B1,$42
        .byte $42,$42,$46,$02,$02,$02,$B0,$42
        .byte $42,$B1,$42,$42,$42,$3E,$48,$46
        .byte $3E,$2E,$02,$02,$40,$42,$02,$3E
        .byte $02
; array, voice 0
LEAD9:  .byte $9F,$0E,$B1,$B0,$2A,$2A,$B1
        .byte $34,$32,$30,$2E,$02,$9F,$04,$30
        .byte $B2,$26,$9F,$0E,$B1,$B0,$2A,$2A
        .byte $B1,$34,$32,$30,$2E,$02,$9F,$05
        .byte $30,$B2,$28,$9F,$0E,$B1,$B0,$2A
        .byte $2A,$B1,$2A,$2A,$2A,$26,$26,$26   ; EB00
        .byte $26,$26,$02,$26,$02,$24,$02,$9F
        .byte $0F,$F1,$1C,$02,$00,$9F,$07,$B1
        .byte $B1,$52,$54,$52,$54,$50,$4C,$4C
        .byte $46,$52,$54,$50,$4C,$4C,$02,$02
        .byte $02,$52,$54,$52,$54,$50,$4C,$4C
        .byte $46,$40,$46,$4A,$50,$4C,$02,$4A
        .byte $02,$9F,$07,$B1,$B1,$52,$54,$50
        .byte $4C,$4C,$02,$9F,$01,$30,$B2,$0E
        .byte $9F,$07,$B1,$B1,$52,$54,$50,$4C
        .byte $4C,$02,$9F,$02,$30,$B2,$10,$9F
        .byte $07,$B1,$B1,$52,$54,$52,$54,$50
        .byte $4C,$4C,$46,$4C,$02,$50,$02,$4C
        .byte $02,$9F,$0F,$F0,$04,$02,$00,$9F
        .byte $15,$00,$B1,$34,$34,$3A,$3C,$B0
        .byte $26,$26,$B1,$26,$2C,$2E,$34,$34
        .byte $3A,$3C,$B0,$26,$26,$B1,$2C,$2E
        .byte $36,$34,$34,$3A,$3C,$B0,$26,$26
        .byte $B1,$26,$2C,$2E,$38,$38,$40,$46
        .byte $B0,$42,$42,$B1,$42,$42,$42,$9F
        .byte $15,$00,$B0,$34,$34,$B1,$34,$3A
        .byte $3C,$3E,$02,$9F,$00,$00,$B2,$26
        .byte $9F,$15,$00,$B0,$34,$34,$B1,$34
        .byte $3A,$3C,$3E,$02,$9F,$00,$00,$B2
        .byte $28,$9F,$15,$00,$B0,$3C,$3C,$B1
        .byte $3C,$3C,$3C,$38,$38,$38,$38,$C2
        .byte $B0,$42,$42,$42,$02,$FF,$B1,$34
        .byte $02,$9F,$00,$00,$B2,$34,$00,$C8
        .byte $B0,$60,$04,$07,$01,$20,$04,$60
        .byte $01,$FF,$C2,$B0,$60,$04,$07,$01
        .byte $20,$04,$60,$01,$B0,$20,$01,$01
        .byte $01,$60,$01,$01,$01,$FF,$C2,$B0

        .byte $60,$04,$07,$01,$20,$04,$60,$01   ; EC00
        .byte $FF,$B2,$60,$20,$B1,$60,$B0,$60
        .byte $60,$B2,$20,$00
; array, voice 0
LEC14:  .byte $9F,$10,$F1,$C3
        .byte $B1,$34,$2A,$34,$38,$34,$2A,$42
        .byte $2A,$FF,$3E,$26,$34,$38,$34,$26
        .byte $32,$26,$C3,$B1,$34,$2A,$34,$38
        .byte $34,$2A,$42,$2A,$FF,$3E,$26,$34
        .byte $38,$34,$26,$32,$26,$00,$9F,$AF
        .byte $33,$B3,$24,$B2,$20,$2A,$B4,$1C
        .byte $B3,$2E,$B2,$2A,$34,$B4,$26,$B3
        .byte $24,$B2,$20,$2A,$B4,$1C,$B3,$2E
        .byte $B2,$2A,$32,$B4,$34,$00,$9F,$15
        .byte $00,$C2,$B1,$34,$34,$42,$B0,$34
        .byte $34,$B1,$32,$32,$42,$B0,$32,$32
        .byte $B1,$2E,$2E,$42,$B0,$2E,$2E,$B1
        .byte $2A,$2A,$42,$B0,$2A,$2A,$B1,$26
        .byte $26,$3E,$B0,$26,$26,$B1,$24,$24
        .byte $3E,$B0,$24,$24,$B1,$38,$38,$38
        .byte $B0,$38,$38,$B1,$2A,$2A,$2A,$B0
        .byte $2A,$2A,$FF,$00,$D0,$B0,$04,$04
        .byte $07,$01,$0A,$04,$04,$04,$FF,$00
; array, voice 0
LECA8:  .byte $9F,$12,$F1,$C3,$B1,$04,$04,$0A
        .byte $0C,$0E,$0E,$10,$12,$FF,$22,$08
        .byte $1E,$1C,$1A,$18,$16,$14,$00,$9F
        .byte $11,$F1,$C3,$B1,$04,$04,$0A,$0C
        .byte $0E,$0E,$10,$12,$FF,$22,$20,$1E
        .byte $1C,$1A,$18,$16,$14,$00,$9F,$00
        .byte $00,$C3,$B1,$1C,$1C,$22,$24,$26
        .byte $26,$28,$2A,$FF,$3A,$38,$36,$34
        .byte $32,$30,$2E,$2C,$00,$C2,$B1,$60
        .byte $60,$04,$01,$04,$01,$04,$01,$60
        .byte $04,$20,$20,$01,$01,$04,$0A,$FF
        .byte $00,$C2,$B1,$60,$04,$20,$20,$60   ; ED00
        .byte $60,$20,$0A,$60,$04,$20,$20,$60
        .byte $01,$81,$0A,$FF,$00
; array, voice 0
LED15:  .byte $9F,$12,$F1
        .byte $C2,$B1,$12,$12,$18,$1A,$1C,$1A
        .byte $18,$16,$FF,$00,$9F,$11,$F1,$C2
        .byte $B1,$12,$12,$18,$1A,$1C,$1A,$18
        .byte $16,$FF,$00,$9F,$00,$00,$C2,$B1
        .byte $2A,$2A,$30,$32,$34,$32,$30,$2E
        .byte $FF,$00,$C2,$B1,$60,$60,$B6,$01
        .byte $FF,$00
; array, voice 0
LED4A:  .byte $C3,$B1,$12,$10,$B6,$02
        .byte $FF,$B1,$14,$02,$B6,$02,$00,$C3
        .byte $B1,$2A,$28,$B6,$02,$FF,$B1,$2C
        .byte $02,$B6,$02,$FF,$00,$C3,$B1,$60
        .byte $60,$B6,$01,$FF,$B2,$60,$01,$01
        .byte $60,$00,$9F,$B6,$32,$B0,$52,$4C
        .byte $52,$B5,$56,$00,$9F,$B6,$32,$B0
        .byte $64,$5C,$64,$B5,$68,$00,$9F,$00
        .byte $00,$B0,$5C,$5C,$5C,$9F,$A0,$00
        .byte $B5,$60,$00,$B0,$07,$07,$07,$C4
        .byte $BA,$04,$04,$04,$FF,$00

; array pointers, voice 0
LED9E:  .word $ED72
        .word LEDCC,$EDEB,$EF07,$EF0E
        .word $FFFF,LED9E+4
; array pointers, voice 1
LEDAC:  .word $ED7C,$EDD9
        .word $EE79,$EF0B,$FFFF,LEDAC+4
; array pointers, voice 2
LEDB8:  .word $ED86,$EDE2,$EF48,$FFFF
        .word LEDB8+4
; array pointers, voice 3
LEDC2:  .word $ED93,$EDE5,$EFAE
        .word $FFFF,LEDC2+4
LEDCC:  .byte $9C,$08,$9E,$18
        .byte $9F,$11,$F1,$B1,$02,$4C,$50,$4C
        .byte $00,$9F,$B1,$F1,$B1,$02,$1C,$20
        .byte $1C,$00,$B3,$02,$00,$B1,$01,$20
        .byte $20,$20,$00,$B1,$5E,$02,$5A,$02
        .byte $54,$52,$50,$4C,$50,$4C,$02,$4C
        .byte $02,$02,$02,$4C,$50,$50,$50,$4C
        .byte $54,$4C,$02,$4C,$9F,$7D,$F1,$02   ; EE00
        .byte $7C,$64,$02,$7C,$02,$9F,$11,$F1
        .byte $4C,$4C,$5E,$5E,$5A,$5A,$52,$52
        .byte $50,$4C,$50,$4C,$02,$46,$02,$02
        .byte $02,$42,$50,$50,$50,$4C,$54,$4C
        .byte $02,$4C,$9F,$7D,$F1,$02,$02,$64
        .byte $7C,$02,$02,$9F,$11,$F1,$4C,$48
        .byte $46,$4C,$02,$4C,$02,$02,$02,$02
        .byte $42,$4C,$02,$4C,$02,$02,$02,$02
        .byte $3E,$4C,$02,$4C,$02,$02,$02,$42
        .byte $3C,$4C,$02,$4C,$02,$02,$02,$02
        .byte $46,$4C,$02,$4C,$9F,$7D,$F1,$02
        .byte $74,$72,$74,$9F,$11,$F1,$42,$4C
        .byte $02,$4C,$02,$02,$02,$02,$3E,$4C
        .byte $02,$4C,$02,$02,$02,$42,$B4,$02
        .byte $00,$B1,$2E,$02,$2A,$02,$24,$22
        .byte $20,$1C,$20,$1C,$02,$1C,$02,$02
        .byte $02,$1C,$20,$20,$20,$1C,$24,$1C
        .byte $02,$1C,$9F,$1C,$F1,$02,$7C,$64
        .byte $02,$7C,$02,$9F,$B1,$F1,$1C,$1C
        .byte $2E,$2E,$2A,$2A,$22,$22,$20,$1C
        .byte $20,$1C,$02,$16,$02,$02,$02,$12
        .byte $20,$20,$20,$1C,$24,$1C,$02,$1C
        .byte $9F,$1C,$F1,$02,$02,$64,$7C,$02
        .byte $02,$9F,$B1,$F1,$1C,$18,$16,$1C
        .byte $02,$1C,$02,$02,$02,$02,$12,$1C
        .byte $02,$1C,$02,$02,$02,$02,$0E,$1C
        .byte $02,$1C,$02,$02,$02,$12,$0C,$1C
        .byte $02,$1C,$02,$02,$02,$02,$16,$1C
        .byte $02,$1C,$9F,$1C,$F1,$02,$74,$72
        .byte $74,$9F,$B1,$F1,$12,$1C,$02,$1C
        .byte $02,$02,$02,$02,$0E,$1C,$02,$1C
        .byte $02,$02,$02,$12,$B4,$02,$00,$9F   ; EF00
        .byte $7D,$F1,$00,$9F,$1C,$F1,$C2,$B4
        .byte $02,$B1,$7C,$64,$02,$7C,$02,$02
        .byte $02,$02,$B4,$02,$B1,$02,$7C,$64
        .byte $02,$7C,$02,$02,$02,$FF,$C3,$B3
        .byte $02,$B1,$02,$76,$72,$02,$FF,$B3
        .byte $02,$B1,$02,$02,$7C,$02,$FF,$C3
        .byte $B3,$02,$B1,$02,$76,$72,$02,$FF
        .byte $B1,$74,$74,$74,$74,$B3,$02,$00
        .byte $9F,$00,$00,$C2,$B5,$34,$B1,$3A
        .byte $3C,$42,$46,$02,$B5,$26,$B1,$2C
        .byte $2E,$34,$38,$02,$B5,$2A,$B1,$30
        .byte $32,$38,$3C,$02,$B5,$34,$B1,$3A
        .byte $3C,$42,$46,$02,$FF,$B5,$26,$B1
        .byte $2C,$2E,$02,$34,$02,$B5,$24,$B1
        .byte $28,$2A,$02,$34,$02,$B5,$20,$B1
        .byte $26,$2E,$02,$34,$02,$B5,$1C,$B1
        .byte $22,$24,$02,$34,$02,$B5,$26,$B1
        .byte $2C,$2E,$02,$34,$02,$B5,$24,$B1
        .byte $28,$2A,$02,$34,$02,$B5,$20,$B1
        .byte $26,$2E,$02,$34,$02,$2A,$2A,$2A
        .byte $2A,$02,$02,$02,$02,$00,$C4,$B1
        .byte $44,$04,$20,$20,$04,$04,$60,$04
        .byte $44,$04,$20,$20,$04,$60,$60,$04
        .byte $FF,$C3,$44,$04,$04,$44,$44,$04
        .byte $60,$04,$FF,$44,$04,$04,$44,$44
        .byte $60,$20,$01,$C3,$44,$04,$04,$44
        .byte $44,$04,$60,$04,$FF,$60,$44,$44
        .byte $44,$01,$20,$60,$01,$00
LEFE6:  .byte $16,$F0
        .byte $3B,$F0,$3B,$F0,$8F,$F0,$FF,$FF
        .byte $E8,$EF
LEFF2:  .byte $20,$F0,$65,$F0,$65,$F0
        .byte $9E,$F0,$FF,$FF,$F4,$EF
LEFFE:  .byte $2A,$F0

        .byte $AD,$F0,$AD,$F0,$19,$F1,$FF,$FF   ; F000
        .byte $00,$F0
LF00A:  .byte $34,$F0,$E7,$F0,$E7,$F0
        .byte $3A,$F1,$FF,$FF,$0C,$F0,$9F,$1A
        .byte $F1,$B0,$38,$38,$38,$38,$02,$00
        .byte $9F,$1A,$F1,$B0,$42,$42,$42,$42
        .byte $02,$00,$9F,$10,$00,$B0,$2E,$2E
        .byte $2E,$2E,$02,$00,$B0,$07,$07,$07
        .byte $07,$01,$00,$9F,$11,$B0,$B2,$50
        .byte $B6,$02,$B9,$4C,$02,$02,$4C,$54
        .byte $5A,$B2,$58,$5E,$9F,$0B,$B0,$B9
        .byte $38,$02,$02,$38,$02,$20,$38,$02
        .byte $20,$38,$02,$20,$B2,$48,$4C,$46
        .byte $9F,$13,$B0,$28,$00,$9F,$13,$B0
        .byte $B2,$42,$B6,$02,$B9,$3C,$02,$02
        .byte $3C,$42,$4C,$B2,$46,$50,$9F,$0C
        .byte $B0,$B9,$42,$02,$02,$08,$02,$08
        .byte $08,$02,$08,$08,$02,$08,$B2,$3C
        .byte $42,$40,$9F,$0F,$B0,$10,$00,$9F
        .byte $11,$B0,$B4,$5A,$62,$5A,$9F,$13
        .byte $B0,$B6,$02,$B2,$1C,$00,$9F,$13
        .byte $B0,$B4,$50,$5A,$50,$9F,$13,$B0
        .byte $B6,$02,$B2,$0E,$00,$9F,$12,$00
        .byte $B8,$62,$9F,$A0,$00,$B9,$68,$6A
        .byte $68,$6A,$02,$68,$6A,$68,$6A,$68
        .byte $5A,$02,$02,$5A,$64,$54,$50,$02
        .byte $02,$B2,$58,$9F,$00,$00,$B9,$62
        .byte $02,$38,$50,$02,$38,$50,$02,$38
        .byte $50,$02,$38,$34,$02,$34,$3A,$02
        .byte $3A,$38,$02,$02,$B2,$28,$00,$B9
        .byte $60,$01,$07,$20,$01,$20,$04,$01
        .byte $07,$04,$01,$60,$60,$01,$07,$20
        .byte $01,$20,$04,$01,$07,$04,$01,$60
        .byte $60,$01,$07,$20,$01,$20,$04,$01   ; F100
        .byte $07,$04,$01,$20,$20,$01,$60,$20
        .byte $01,$60,$20,$01,$04,$41,$01,$01
        .byte $00,$9F,$00,$00,$C3,$B8,$32,$B9
        .byte $34,$B9,$32,$02,$34,$B9,$32,$02
        .byte $34,$B9,$32,$02,$34,$FF,$B8,$32
        .byte $B9,$34,$B9,$32,$02,$34,$B2,$02
        .byte $26,$00,$B9,$41,$01,$07,$04,$01
        .byte $20,$60,$01,$07,$04,$01,$60,$60
        .byte $01,$07,$04,$01,$20,$44,$01,$07
        .byte $04,$01,$01,$41,$01,$07,$04,$01
        .byte $20,$60,$01,$07,$04,$01,$60,$60
        .byte $01,$07,$04,$01,$20,$60,$01,$07
        .byte $44,$01,$01,$00
LF16C:  .byte $94,$F1,$9D,$F1
        .byte $FF,$FF,$76,$F1
LF174:  .byte $9A,$F1,$DE,$F1
        .byte $1A,$F2,$DE,$F1,$30,$F2,$44,$F2
        .byte $FF,$FF,$76,$F1
LF184:  .byte $CC,$F2,$E4,$F2
        .byte $FF,$FF,$86,$F1
LF18C:  .byte $B9,$F3,$C7,$F3
        .byte $FF,$FF,$8E,$F1,$9F,$77,$32,$BD
        .byte $02,$00,$9F,$2D,$F4,$B2,$62,$62
        .byte $62,$02,$B7,$02,$B0,$64,$B7,$02
        .byte $B0,$64,$B7,$68,$B0,$68,$B2,$68
        .byte $B2,$62,$64,$62,$02,$B7,$02,$B0
        .byte $64,$B7,$02,$B0,$64,$B7,$68,$B0
        .byte $68,$B2,$68,$B2,$62,$62,$5A,$02
        .byte $B7,$02,$B0,$64,$B7,$02,$B0,$64
        .byte $B7,$68,$B0,$68,$B2,$68,$B2,$62
        .byte $64,$62,$02,$B4,$02,$00,$B2,$62
        .byte $B7,$68,$B0,$5A,$B2,$02,$02,$B7
        .byte $02,$B0,$6C,$B7,$02,$B0,$6C,$B7
        .byte $68,$B0,$64,$B7,$62,$B0,$5E,$B2
        .byte $62,$B7,$68,$B0,$5A,$B2,$02,$02
        .byte $B7,$02,$B0,$5A,$B7,$02,$B0,$5A   ; F200
        .byte $B7,$58,$B0,$5A,$B7,$5E,$B0,$5A
        .byte $B2,$62,$B7,$68,$B0,$5A,$B2,$02
        .byte $02,$00,$B7,$02,$B0,$5A,$B7,$02
        .byte $B0,$6C,$B7,$68,$B0,$64,$B7,$62
        .byte $B0,$5E,$B3,$5A,$02,$B4,$02,$00
        .byte $B7,$02,$B0,$5A,$B7,$02,$B0,$5A
        .byte $B7,$58,$B0,$5A,$B7,$5E,$B0,$58
        .byte $B4,$5A,$02,$00,$B7,$02,$B0,$72
        .byte $B2,$02,$B2,$6C,$64,$B2,$64,$B7
        .byte $68,$B0,$6C,$B2,$02,$02,$B7,$02
        .byte $B0,$62,$B2,$02,$B2,$62,$64,$B2
        .byte $68,$B6,$02,$B7,$02,$B0,$72,$B2
        .byte $02,$B2,$6C,$64,$B2,$64,$B7,$68
        .byte $B0,$6C,$B2,$02,$02,$B8,$68,$68
        .byte $68,$68,$68,$68,$B3,$68,$02,$B2
        .byte $62,$B7,$68,$B0,$72,$B2,$02,$02
        .byte $B7,$02,$B0,$5E,$B7,$02,$B0,$5A
        .byte $B7,$5E,$B0,$62,$B7,$64,$B0,$68
        .byte $B2,$62,$B7,$5A,$B0,$50,$B3,$02
        .byte $B7,$02,$B0,$5E,$B7,$02,$B0,$5A
        .byte $B7,$5E,$B0,$62,$B7,$64,$B0,$68
        .byte $B2,$62,$68,$5A,$02,$B7,$02,$B0
        .byte $5A,$B7,$02,$B0,$5A,$B7,$58,$B0
        .byte $5A,$B7,$5E,$B0,$58,$B6,$5A,$B2
        .byte $02,$B4,$02,$00,$9F,$00,$00,$C7
        .byte $B4,$02,$FF,$B7,$02,$B0,$50,$B7
        .byte $4C,$B0,$02,$B7,$4A,$B0,$02,$B7
        .byte $46,$B0,$02,$00,$C3,$B2,$42,$4A
        .byte $3C,$42,$B7,$34,$B0,$34,$B2,$3C
        .byte $B2,$38,$40,$FF,$42,$32,$3C,$30
        .byte $2E,$3A,$38,$2C,$B7,$2A,$B0,$2A
        .byte $B2,$42,$3C,$42,$B7,$34,$B0,$34   ; F300
        .byte $B2,$3C,$B2,$38,$40,$B2,$42,$4A
        .byte $3C,$42,$B7,$34,$B0,$34,$B2,$3C
        .byte $B2,$38,$40,$42,$38,$32,$2A,$34
        .byte $3C,$38,$28,$2A,$B7,$2A,$B0,$42
        .byte $B2,$2E,$B7,$2E,$B0,$42,$B2,$30
        .byte $B7,$30,$B0,$42,$B2,$32,$32,$34
        .byte $3C,$B7,$42,$B0,$34,$B7,$46,$B0
        .byte $34,$B7,$48,$B0,$34,$B7,$46,$B0
        .byte $34,$B7,$42,$B0,$34,$B7,$3C,$B0
        .byte $34,$B2,$2A,$32,$B7,$38,$B0,$2A
        .byte $B7,$3C,$B0,$2A,$B7,$3E,$B0,$2A
        .byte $B7,$3C,$B0,$2A,$B7,$38,$B0,$2A
        .byte $B7,$32,$B0,$2A,$B7,$34,$B0,$34
        .byte $B2,$3C,$B7,$42,$B0,$34,$B7,$46
        .byte $B0,$34,$B7,$48,$B0,$34,$B7,$46
        .byte $B0,$34,$B7,$42,$B0,$34,$B7,$3C
        .byte $B0,$34,$B7,$38,$B0,$38,$B2,$40
        .byte $46,$40,$9F,$A0,$00,$B6,$48,$B2
        .byte $02,$9F,$00,$00,$C3,$B2,$42,$4A
        .byte $3C,$42,$B7,$34,$B0,$34,$B2,$3C
        .byte $B2,$38,$40,$FF,$3E,$3E,$3E,$3E
        .byte $C3,$B9,$34,$34,$34,$FF,$B2,$34
        .byte $00,$CF,$B2,$01,$07,$FF,$B7,$01
        .byte $B0,$41,$B7,$84,$B0,$01,$00,$C7
        .byte $B2,$04,$B7,$60,$B0,$60,$B2,$04
        .byte $B7,$20,$B0,$01,$FF,$B7,$01,$B0
        .byte $20,$B7,$44,$B0,$01,$BC,$60,$60
        .byte $B9,$60,$60,$60,$20,$20,$B2,$44
        .byte $B7,$60,$B0,$60,$B7,$01,$B0,$01
        .byte $B7,$20,$B0,$07,$B7,$04,$B0,$01
        .byte $B7,$60,$B0,$60,$B7,$04,$B0,$84

        .byte $B7,$44,$B0,$41,$C3,$B2,$04,$B7   ; F400
        .byte $60,$B0,$60,$B7,$01,$B0,$01,$B7
        .byte $20,$B0,$07,$B7,$04,$B0,$01,$B7
        .byte $60,$B0,$60,$B7,$04,$B0,$84,$B7
        .byte $44,$B0,$41,$FF,$C6,$B7,$04,$B0
        .byte $04,$B7,$44,$B0,$04,$B7,$04,$B0
        .byte $07,$B7,$44,$B0,$84,$FF,$B8,$60
        .byte $60,$60,$41,$41,$41,$B0,$60,$C7
        .byte $20,$FF,$C6,$BC,$20,$20,$FF,$C3
        .byte $B2,$04,$B7,$60,$B0,$60,$B2,$04
        .byte $B7,$20,$B0,$41,$B2,$04,$B7,$60
        .byte $B0,$60,$B2,$04,$B7,$20,$B0,$07
        .byte $FF,$B2,$04,$B7,$60,$B0,$60,$B2
        .byte $04,$B7,$20,$B0,$07,$B9,$41,$41
        .byte $41,$81,$81,$81,$20,$20,$20,$60
        .byte $01,$01,$00

; array pointers, voice 0
LF47B:  .word LF4AD,LF500,LF566,LF507
        .word LF56E,LF507,LF57F,$0000
; array pointers, voice 1
LF48B:  .word $F4C5,$F52A,$F56A,$F52D
        .word $F572,$F52D,$F576
; array pointers, voice 2
LF499:  .word $F4DD,$F550,$F588,$FFFF
        .word LF499+4
; array pointers, voice 3
LF4A3:  .word $F4F5,$F58D,$F5D5
        .word $FFFF,LF4A3+4
LF4AD:  .byte $9F,$11,$F3
        .byte $BD,$52,$54,$56,$58,$5A,$5C,$5E   ; F4B0
        .byte $60,$62,$9F,$B4,$F7,$B0,$52,$02
        .byte $B2,$3C,$B3,$3E,$00,$9F,$11,$F7   ; F4C0
        .byte $BD,$58,$5A,$5C,$5E,$60,$62,$64
        .byte $66,$68,$9F,$B4,$F8,$B0,$78,$02   ; F4D0
        .byte $B2,$4A,$B3,$4C,$00,$9F,$0F,$00
        .byte $BD,$62,$64,$66,$68,$6A,$6C,$6E   ; F4E0
        .byte $70,$72,$9F,$A0,$00,$B0,$5A,$02
        .byte $B2,$5C,$B3,$5E,$00,$C9,$BD,$04   ; F4F0
        .byte $FF,$01,$B0,$07,$01,$B6,$07,$00
LF500:  .byte $9F,$BA,$B1,$C4,$BD,$02,$FF       ; F500
LF507:  .byte $C2
        .byte $B8,$80,$B9,$72,$B8,$72,$B9,$72
        .byte $B8,$68,$B9,$72,$B8,$68,$B9,$72
        .byte $B8,$7C,$B9,$72,$B8,$68,$B9,$72
        .byte $B8,$68,$B9,$72,$B8,$68,$B9,$72
        .byte $FF,$00,$9F,$0B,$B1,$C2,$B8,$68
        .byte $B9,$5A,$B8,$5A,$B9,$5A,$B8,$50
        .byte $B9,$5A,$B8,$50,$B9,$5A,$B8,$64
        .byte $B9,$5A,$B8,$50,$B9,$5A,$B8,$50
        .byte $B9,$5A,$B8,$50,$B9,$5A,$FF,$00
        .byte $9F,$12,$00,$B2,$7A,$9F,$A0,$00
        .byte $B2,$2A,$02,$02,$9F,$12,$00,$B4
        .byte $80,$7A,$B3,$80,$02,$00
LF566:  .byte $9F,$1F
        .byte $B1,$00,$9F,$1E,$B1,$00
LF56E:  .byte $9F,$03
        .byte $B1,$00,$9F,$1F,$B1,$00,$9F,$0D
        .byte $B3,$C2,$B1,$72,$02,$FF,$00
LF57F:  .byte $9F
        .byte $0D,$B3,$B1,$72,$02,$70,$02,$00
        .byte $C5,$B4,$02,$FF,$00,$B9,$07,$01
        .byte $04,$44,$01,$04,$60,$01,$20,$01
        .byte $01,$04,$C2,$07,$01,$04,$04,$01
        .byte $04,$FF,$07,$01,$04,$41,$01,$04
        .byte $60,$01,$20,$01,$01,$07,$04,$01
        .byte $07,$04,$01,$04,$07,$01,$04,$44
        .byte $01,$01,$00,$B9,$07,$01,$04,$04
        .byte $01,$60,$44,$01,$04,$04,$01,$20
        .byte $60,$01,$04,$07,$01,$04,$60,$01
        .byte $20,$44,$01,$01,$00,$B9,$04,$01
        .byte $07,$04,$01,$60,$44,$01,$04,$60
        .byte $01,$20,$C4,$04,$01,$04,$04,$04
        .byte $01,$FF,$00

; array pointers, voice 0
LF5EB:  .word $F4AD,LF5FD,$0000
; array pointers, voice 1
LF5F1:  .word $F4C5,$F624
; array pointers, voice 2
LF5F5:  .word $F4DD,$F648
; array pointers, voice 3
LF5F9:  .word $F4F5,$F65E
; array, voice 0
LF5FD:  .byte $9F,$0B,$B1
        .byte $C4,$B2,$0E,$0A,$0E,$1A,$FF,$9F   ; F600
        .byte $0B,$31,$C4,$B1,$0E,$0E,$0E,$0E
        .byte $0E,$0E,$0E,$10,$FF,$C4,$B1,$16
        .byte $16,$16,$16,$16,$16,$16,$18,$FF
        .byte $BD,$02,$02,$00,$9F,$06,$34,$C4
        .byte $B2,$0E,$0A,$0E,$1A,$FF,$9F,$07
        .byte $31,$C4,$B1,$1C,$1C,$1C,$1C,$1C
        .byte $1C,$1C,$1E,$FF,$C4,$B1,$24,$24
        .byte $24,$24,$24,$24,$24,$26,$FF,$00
        .byte $9F,$A0,$00,$C8,$B2,$26,$22,$26
        .byte $32,$FF,$C4,$B1,$2E,$46,$24,$3C
        .byte $2E,$46,$30,$48,$FF,$00,$E0,$B2
        .byte $44,$07,$44,$07,$44,$07,$FF,$00

; array pointers, voice 0
LF668:  .word $F66E,$FFFF,LF668
        .byte $B4,$02,$02,$02,$02,$00
; array pointers, voice 0
LF674:  .word $F6AA,$F794
        .word $F7EE,$F70D,$F70D,$F6F1
        .word $F6F1,$0000
; array pointers, voice 1
LF684:  .word $F6C0,$F7C0
        .word $F818,$F74B,$F74B,$F6FF
        .word $F6FF
; array pointers, voice 2
LF692:  .word $F6D6,$F7E6,$F83F
LF698:  .word $F789,$FFFF,LF698
; array pointers, voice 3
LF69E:  .word $F6E5,$F7EA,$F867
LF6A4:  .word $F78E,$FFFF,LF6A4
        .byte $9F,$05,$B1,$BA,$08,$02
        .byte $40,$B7,$02,$9F,$85,$B1,$BC,$02
        .byte $2C,$BC,$02,$28,$BC,$02,$30,$00
        .byte $9F,$05,$B1,$BA,$0C,$02,$46,$B7
        .byte $02,$9F,$85,$B1,$BC,$02,$2E,$BC
        .byte $02,$2A,$BC,$02,$32,$00,$9F,$13
        .byte $00,$BA,$2A,$02,$62,$B7,$02,$C3
        .byte $BC,$02,$20,$FF,$00,$BA,$41,$01
        .byte $0A,$B7,$01,$C3,$BC,$01,$0A,$FF
        .byte $00,$9F,$63,$F1,$C2,$B7,$6E,$B0
        .byte $6C,$B7,$6A,$B0,$64,$FF,$00,$9F
        .byte $1F,$F1,$C2,$B7,$6E,$B0,$6C,$B7   ; F700
        .byte $6A,$B0,$64,$FF,$00,$9F,$63,$F1
        .byte $C2,$B7,$6E,$B0,$6C,$B7,$6A,$B0
        .byte $64,$FF,$9F,$7F,$F1,$C2,$B7,$6E
        .byte $B0,$6C,$B7,$6A,$B0,$64,$FF,$9F
        .byte $7E,$F1,$C2,$B7,$6E,$B0,$6C,$B7
        .byte $6A,$B0,$64,$FF,$9F,$7D,$F1,$B7
        .byte $6E,$B0,$6C,$B7,$6A,$B0,$64,$9F
        .byte $7C,$F1,$B7,$6E,$B0,$6C,$B7,$6A
        .byte $B0,$64,$00,$9F,$03,$F1,$C2,$B7
        .byte $6E,$B0,$6C,$B7,$6A,$B0,$64,$FF
        .byte $9F,$1F,$F1,$C2,$B7,$6E,$B0,$6C
        .byte $B7,$6A,$B0,$64,$FF,$9F,$1E,$F1
        .byte $C2,$B7,$6E,$B0,$6C,$B7,$6A,$B0
        .byte $64,$FF,$9F,$1D,$F1,$B7,$6E,$B0
        .byte $6C,$B7,$6A,$B0,$64,$9F,$1C,$F1
        .byte $B7,$6E,$B0,$6C,$B7,$6A,$B0,$64
        .byte $00,$B4,$02,$02,$02,$00,$B4,$01
        .byte $01,$01,$01,$00,$9E,$28,$9C,$00
        .byte $BA,$02,$9F,$63,$F1,$C2,$B0,$6E
        .byte $6C,$6A,$64,$FF,$9F,$7F,$F1,$C2
        .byte $6E,$6C,$6A,$64,$FF,$9F,$7E,$F1
        .byte $C2,$6E,$6C,$6A,$64,$FF,$9F,$7D
        .byte $F1,$C2,$6E,$6C,$6A,$64,$FF,$00
        .byte $9F,$03,$F1,$C2,$B0,$6E,$6C,$6A
        .byte $64,$FF,$9F,$1F,$F1,$C2,$6E,$6C
        .byte $6A,$64,$FF,$9F,$1E,$F1,$C2,$6E
        .byte $6C,$6A,$64,$FF,$9F,$1D,$F1,$C2
        .byte $6E,$6C,$6A,$64,$FF,$00,$B4,$02
        .byte $02,$00,$B4,$01,$01,$00,$9F,$1E
        .byte $B1,$B0,$12,$10,$02,$0E,$02,$0C
        .byte $02,$0A,$02,$08,$12,$10,$02,$0E

        .byte $02,$0C,$02,$0A,$02,$08,$B2,$14   ; F800
        .byte $B0,$2A,$B8,$02,$9F,$8A,$31,$B6
        .byte $72,$B8,$02,$9E,$0C,$9C,$06,$00
        .byte $9F,$1D,$31,$B0,$12,$10,$02,$0E
        .byte $02,$0C,$02,$0A,$02,$08,$12,$10
        .byte $02,$0E,$02,$0C,$02,$0A,$02,$08
        .byte $B2,$14,$B0,$12,$B8,$02,$9F,$8A
        .byte $31,$BA,$02,$02,$B6,$74,$00,$9F
        .byte $00,$00,$B0,$2A,$28,$02,$26,$02
        .byte $24,$02,$22,$02,$20,$2A,$28,$02
        .byte $26,$02,$24,$02,$22,$02,$20,$B2
        .byte $2C,$B0,$2A,$B8,$02,$9F,$80,$00
        .byte $BA,$02,$02,$02,$B4,$5A,$00,$B1
        .byte $44,$04,$84,$04,$44,$04,$84,$04
        .byte $44,$04,$B0,$81,$81,$B1,$01,$B0
        .byte $41,$B8,$01,$BA,$01,$01,$01,$B4
        .byte $41,$00
LF882:  .byte $02,$F9,$49,$F9,$6E,$F9
        .byte $75,$F9,$3A,$F9,$75,$F9,$49,$F9
        .byte $6E,$F9,$75,$F9,$3A,$F9,$75,$F9
        .byte $49,$F9
LF89A:  .byte $75,$F9,$75,$F9,$FF,$FF
        .byte $98,$F8
LF8A2:  .byte $0F,$F9,$9A,$F9,$BB,$F9
        .byte $C2,$F9,$D0,$F9,$D7,$F9,$9A,$F9
        .byte $BB,$F9,$C2,$F9,$D0,$F9,$D7,$F9
        .byte $9A,$F9
LF8BA:  .byte $C2,$F9,$D7,$F9,$FF,$FF
        .byte $B8,$F8
LF8C2:  .byte $2C,$F9,$E3,$F9,$F2,$F9
        .byte $F6,$F9,$41,$F9,$F6,$F9,$E3,$F9
        .byte $F2,$F9,$F6,$F9,$41,$F9,$1F,$FA
        .byte $E3,$F9
LF8DA:  .byte $F6,$F9,$1F,$FA,$FF,$FF
        .byte $D8,$F8
LF8E2:  .byte $33,$F9,$03,$FA,$0F,$FA
        .byte $13,$FA,$45,$F9,$13,$FA,$03,$FA
        .byte $0F,$FA,$13,$FA,$45,$F9,$37,$FA
        .byte $03,$FA
LF8FA:  .byte $13,$FA,$37,$FA,$FF,$FF
        .byte $F8,$F8,$9F,$7A,$F2,$C5,$B1,$72   ; F900
        .byte $70,$68,$64,$FF,$B6,$02,$00,$9F
        .byte $BE,$F1,$B1,$72,$70,$68,$64,$9F
        .byte $BC,$F1,$B1,$72,$70,$68,$64,$9F
        .byte $B4,$F1,$C3,$B1,$72,$70,$68,$64
        .byte $FF,$B6,$02,$00,$C5,$B3,$02,$FF
        .byte $B6,$02,$00,$C5,$B3,$01,$FF,$B6
        .byte $01,$00,$9F,$B7,$B1,$B9,$02,$74
        .byte $00,$B9,$02,$02,$00,$B9,$01,$04
        .byte $00,$9F,$B7,$B1,$B1,$68,$50,$5A
        .byte $50,$5E,$50,$58,$5A,$68,$50,$5A
        .byte $50,$5E,$50,$62,$5A,$5A,$50,$5E
        .byte $50,$68,$50,$5A,$50,$5A,$48,$4C
        .byte $50,$4C,$42,$4C,$3A,$00,$9F,$B7
        .byte $B1,$B9,$66,$6A,$00,$9F,$B7,$B1
        .byte $B1,$5A,$50,$4A,$42,$38,$42,$4A
        .byte $50,$58,$50,$46,$40,$38,$40,$46
        .byte $50,$5A,$54,$4C,$42,$3C,$42,$4C
        .byte $54,$5A,$52,$4C,$42,$52,$42,$4C
        .byte $52,$00,$9F,$B6,$B2,$B1,$62,$64
        .byte $68,$6C,$B3,$68,$B1,$5A,$5E,$62
        .byte $64,$B3,$62,$B1,$54,$5A,$B2,$5A
        .byte $B1,$50,$5A,$B2,$5A,$B3,$4C,$B2
        .byte $4A,$50,$00,$9F,$B7,$B2,$B9,$68
        .byte $6C,$00,$9F,$B6,$F4,$B4,$62,$B3
        .byte $5E,$B2,$5A,$58,$B4,$5A,$4C,$00
        .byte $9F,$B7,$B1,$B9,$02,$76,$00,$9F
        .byte $B6,$F4,$B4,$62,$B3,$5E,$68,$B4
        .byte $72,$76,$00,$9F,$A0,$00,$B3,$5A
        .byte $58,$54,$50,$4C,$4A,$48,$B2,$46
        .byte $44,$00,$B9,$02,$02,$00,$9F,$A0
        .byte $00,$C3,$B3,$2A,$42,$FF,$2A,$B2
        .byte $42,$2A,$00,$C3,$B2,$44,$04,$81   ; FA00
        .byte $04,$FF,$44,$01,$41,$44,$00,$B9
        .byte $04,$04,$00,$C3,$B2,$44,$04,$81
        .byte $04,$FF,$44,$01,$41,$44,$00,$B3
        .byte $2A,$42,$2A,$42,$4A,$4C,$B8,$3A
        .byte $38,$34,$BB,$02,$B8,$30,$9F,$00
        .byte $00,$B8,$2E,$2A,$BB,$02,$00,$C3
        .byte $B1,$41,$01,$04,$04,$81,$04,$07
        .byte $01,$FF,$B8,$44,$04,$07,$BB,$01
        .byte $B8,$41,$41,$81,$BB,$01,$00
LFA4F:  .byte $69
        .byte $FA,$81,$FA,$99,$FA,$FF,$FF,$53
        .byte $FA
LFA59:  .byte $72,$FA,$C4,$FA,$FF,$FF,$5B
        .byte $FA
LFA61:  .byte $89,$FA,$EB,$FA,$FF,$FF,$63
        .byte $FA,$9F,$72,$B1,$C2,$B7,$7A,$72
        .byte $FF,$00,$9F,$1E,$B1,$B7,$7A,$72
        .byte $9F,$1C,$B1,$B7,$7A,$72,$9F,$17
        .byte $B1,$C3,$B7,$7A,$72,$FF,$B3,$02
        .byte $00,$C5,$B7,$02,$02,$FF,$B3,$02
        .byte $00,$C5,$B7,$01,$01,$FF,$B3,$01
        .byte $00,$9F,$19,$B1,$B1,$68,$50,$5A
        .byte $50,$5E,$50,$58,$5A,$68,$50,$5A
        .byte $50,$5E,$50,$62,$5A,$5A,$50,$54
        .byte $50,$68,$50,$62,$50,$5A,$48,$4C
        .byte $50,$4C,$42,$4C,$3A,$9F,$B6,$B1
        .byte $B9,$02,$82,$00,$9F,$08,$B0,$B1
        .byte $62,$64,$68,$6C,$B3,$68,$B1,$5A
        .byte $5E,$62,$64,$B3,$62,$B1,$54,$5A
        .byte $B2,$5A,$B1,$50,$5A,$B2,$5A,$B3
        .byte $4C,$B2,$4A,$50,$9F,$B6,$B2,$B9
        .byte $02,$84,$00,$9F,$12,$00,$B3,$72
        .byte $70,$6C,$68,$64,$62,$60,$B2,$5E
        .byte $5C,$B9,$02,$02,$00,$00,$00,$00
.endscope ;LE26E

.endscope ;RDAFB
RDAFB = RDAFB::RDAFB
; ============================================================================

; ----------------------------------------------------------------------------
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FB00 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FB08 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FB10 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FB18 FF FF FF FF FF FF FF FF
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FB20 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FB28 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FB30 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FB38 00 00 00 00 00 00 00 00
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FB40 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FB48 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FB50 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FB58 FF FF FF FF FF FF FF FF
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FB60 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FB68 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FB70 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FB78 00 00 00 00 00 00 00 00
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FB80 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FB88 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FB90 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FB98 FF FF FF FF FF FF FF FF
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FBA0 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FBA8 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FBB0 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FBB8 00 00 00 00 00 00 00 00
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FBC0 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FBC8 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FBD0 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FBD8 FF FF FF FF FF FF FF FF
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FBE0 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FBE8 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FBF0 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$81,$08   ; FBF8 00 00 00 00 00 00 81 08
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FC00 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FC08 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FC10 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FC18 FF FF FF FF FF FF FF FF
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FC20 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FC28 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FC30 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FC38 00 00 00 00 00 00 00 00
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FC40 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FC48 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FC50 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FC58 FF FF FF FF FF FF FF FF
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FC60 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FC68 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FC70 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FC78 00 00 00 00 00 00 00 00
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FC80 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FC88 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FC90 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FC98 FF FF FF FF FF FF FF FF
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FCA0 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FCA8 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FCB0 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FCB8 00 00 00 00 00 00 00 00
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FCC0 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FCC8 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FCD0 FF FF FF FF FF FF FF FF
        .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF   ; FCD8 FF FF FF FF FF FF FF FF
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FCE0 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FCE8 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FCF0 00 00 00 00 00 00 00 00
        .byte $00,$00,$00,$00,$00,$00,$00,$00   ; FCF8 00 00 00 00 00 00 00 00

; ----------------------------------------------------------------------------
; APU audio sample 1, 112 bytes
LFD00:  .byte $74,$FF,$FF,$03,$24,$01,$82,$54
        .byte $01,$10,$FF,$FF,$FF,$FF,$0F,$00
        .byte $00,$B0,$FF,$7F,$09,$00,$00,$B8
        .byte $FF,$FF,$0F,$00,$E0,$FF,$FF,$02
        .byte $01,$00,$C0,$FF,$FF,$FF,$01,$00
        .byte $00,$FE,$FF,$FF,$01,$00,$C0,$FE
        .byte $5F,$02,$00,$FC,$FF,$FF,$FF,$00
        .byte $00,$00,$E0,$FF,$FF,$07,$00,$00
        .byte $FF,$FF,$1F,$00,$00,$F4,$FF,$FF
        .byte $03,$00,$00,$FC,$FF,$FF,$1F,$00
        .byte $00,$E0,$FF,$FF,$03,$00,$80,$FF
        .byte $FF,$3F,$00,$00,$F0,$FF,$FF,$0F
        .byte $00,$00,$80,$FF,$FF,$7F,$00,$00
        .byte $FE,$FF,$02,$00,$00,$F8,$FF,$FF

        .byte $3F,$01,$00,$C0,$FF,$FF,$3F,$00
        .byte $00,$C0,$FF,$BF,$04,$25,$A9,$FF

; ----------------------------------------------------------------------------
; APU audio sample 2, 240 bytes
LFD80:  .byte $ff,$02,$00,$00,$e0,$ff,$ff,$5f   ; FD80
        .byte $00,$00,$e0,$ff,$ff,$97,$04,$00
        .byte $ac,$55,$b7,$93,$44,$f7,$ef,$5f
        .byte $41,$00,$00,$d5,$7d,$ef,$5e,$11
        .byte $00,$f5,$7d,$df,$57,$02,$24,$5a
        .byte $82,$6a,$35,$b5,$aa,$f6,$fd,$2f
        .byte $25,$02,$00,$b5,$75,$7f,$4b,$42
        .byte $04,$b4,$fd,$ff,$7e,$11,$00,$54
        .byte $aa,$fa,$56,$82,$52,$db,$7d,$af
        .byte $2a,$02,$80,$f6,$ff,$3f,$09,$00
        .byte $00,$fb,$fd,$bf,$46,$00,$a5,$f6
        .byte $ff,$2a,$00,$00,$e8,$fe,$ff,$2f
        .byte $01,$00,$6a,$ff,$ff,$25,$00,$00
        .byte $dc,$ff,$bf,$12,$00,$b0,$fb,$ff
        .byte $5f,$04,$00,$00,$fb,$ff,$bf,$00
        .byte $00,$e8,$ff,$ff,$13,$00,$00,$75
        .byte $ff,$ff,$09,$00,$40,$ee,$ff,$7f   ; FE00
        .byte $11,$00,$c0,$fd,$ff,$4b,$00,$00
        .byte $b5,$fd,$ff,$2b,$00,$80,$f6,$fe
        .byte $ff,$08,$02,$00,$f6,$ff,$5f,$49
        .byte $00,$50,$f7,$7f,$af,$08,$00,$a4
        .byte $f6,$ff,$2d,$04,$11,$da,$f7,$76
        .byte $2b,$04,$90,$6b,$df,$ad,$12,$44
        .byte $50,$fd,$fe,$6a,$25,$41,$52,$d5
        .byte $f6,$aa,$24,$51,$69,$db,$de,$4a
        .byte $92,$28,$55,$db,$b6,$aa,$52,$a1
        .byte $52,$5b,$37,$55,$95,$54,$a9,$ad
        .byte $5a,$55,$a5,$54,$55,$55,$ab,$55
        .byte $25,$55,$a9,$d3,$d6,$4a,$95,$a4
        .byte $aa,$5a,$ab,$4d,$95,$54,$b2,$da

        .byte $b6,$a9,$92,$54,$54,$eb,$da,$aa   ; FE70
        .byte $92,$a4,$4a,$6b,$b7,$69,$92,$a4

        .byte $52,$6f,$b5,$a9,$24,$a4,$6a,$db   ; FE80
        .byte $b6,$95,$22,$51,$6a,$fb,$56,$15
        .byte $12,$29,$b5,$fb,$d6,$92,$90,$54
        .byte $6d,$7b,$55,$91,$90,$a4,$77,$bf
        .byte $a6,$02,$12,$a9,$f7,$db,$4a,$11
        .byte $92,$b4,$ed,$5d,$55,$82,$a4,$b6
        .byte $b7,$2b,$49,$90,$a4,$f6,$77,$5b
        .byte $49,$40,$52,$bb,$77,$2b,$09,$a1
        .byte $6c,$bb,$6d,$95,$48,$a8,$da,$de
        .byte $b5,$92,$08,$91,$6d,$f7,$b6,$24
        .byte $89,$52,$6d,$db,$aa,$24,$49,$55
        .byte $af,$5e,$95,$14,$a1,$b2,$7b,$b7
        .byte $92,$92,$48,$69,$db,$56,$95,$52
        .byte $a9,$6a,$db,$aa,$92,$24,$d5,$6a
        .byte $af,$44,$44,$55,$44,$44,$44,$44
        .byte $33,$22,$55,$aa,$00,$55,$00,$00
